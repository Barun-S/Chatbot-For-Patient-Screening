{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\flowtree.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './flowtree.css';\n// const API_URL = \"http://localhost:5001/fetchalldata\";\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faFolder, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\n// // import \"./TreeNode.css\";\n\n// function TreeNode({ data }) {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const toggle = () => {\n//     setIsOpen(!isOpen);\n//   };\n\n//   const hasChildren = data.children && data.children.length > 0;\n\n//   return (\n//     <li className=\"tree-node\">\n//       <div className=\"tree-node__content\">\n//         {hasChildren && (\n//           <FontAwesomeIcon\n//             icon={isOpen ? faFolderOpen : faFolder}\n//             className=\"tree-node__toggle\"\n//             onClick={toggle}\n//           />\n//         )}\n//         <span className=\"tree-node__label\">{data.name}</span>\n//         {data.value && (\n//           <span className=\"tree-node__value\">({data.value})</span>\n//         )}\n//       </div>\n//       {hasChildren && isOpen && (\n//         <ul className=\"tree-node__children\">\n//           {data.children.map((child) => (\n//             <TreeNode key={child.name} data={child} />\n//           ))}\n//         </ul>\n//       )}\n//     </li>\n//   );\n// }\n\n// export default TreeNode;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./flowtree.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [collapsed, setCollapsed] = useState(false);\n  const handleClick = () => {\n    setCollapsed(!collapsed);\n  };\n  const handleMinimizeClick = e => {\n    e.stopPropagation();\n    setCollapsed(true);\n  };\n  const renderChild = child => {\n    if (typeof child === \"object\") {\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        data: child\n      }, child.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__value\",\n        children: [\"\\\"\", child, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const isObjectEmpty = obj => {\n    return Object.keys(obj).length === 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node__content\",\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__toggle\",\n        children: isObjectEmpty(data) ? \"\" : collapsed ? \"+\" : \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__label\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), Object.values(data).filter(value => typeof value !== \"object\").map(value => renderChild(value)), isObjectEmpty(data) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__value\",\n        children: \"{}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this), !isObjectEmpty(data) && collapsed && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tree-node__minimize\",\n        onClick: handleMinimizeClick,\n        children: \"Minimize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !isObjectEmpty(data) && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `tree-node__children ${collapsed ? \"tree-node__children--collapsed\" : \"\"}`,\n      children: Object.values(data).filter(value => typeof value === \"object\").map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        data: child\n      }, child.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nfunction TreeView(_ref2) {\n  _s2();\n  let {\n    apiUrl\n  } = _ref2;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(apiUrl);\n      const jsonData = await response.json();\n      setData([jsonData]);\n      console.log;\n    };\n    fetchData();\n  }, [apiUrl]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"tree-view\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(TreeNode, {\n      data: item\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s2(TreeView, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useEffect","useState","TreeNode","data","collapsed","setCollapsed","handleClick","handleMinimizeClick","e","stopPropagation","renderChild","child","name","isObjectEmpty","obj","Object","keys","length","values","filter","value","map","TreeView","apiUrl","setData","fetchData","response","fetch","jsonData","json","console","log","item"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/flowtree.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './flowtree.css';\r\n// const API_URL = \"http://localhost:5001/fetchalldata\";\r\n\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faFolder, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\r\n// // import \"./TreeNode.css\";\r\n\r\n// function TreeNode({ data }) {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const toggle = () => {\r\n//     setIsOpen(!isOpen);\r\n//   };\r\n\r\n//   const hasChildren = data.children && data.children.length > 0;\r\n\r\n//   return (\r\n//     <li className=\"tree-node\">\r\n//       <div className=\"tree-node__content\">\r\n//         {hasChildren && (\r\n//           <FontAwesomeIcon\r\n//             icon={isOpen ? faFolderOpen : faFolder}\r\n//             className=\"tree-node__toggle\"\r\n//             onClick={toggle}\r\n//           />\r\n//         )}\r\n//         <span className=\"tree-node__label\">{data.name}</span>\r\n//         {data.value && (\r\n//           <span className=\"tree-node__value\">({data.value})</span>\r\n//         )}\r\n//       </div>\r\n//       {hasChildren && isOpen && (\r\n//         <ul className=\"tree-node__children\">\r\n//           {data.children.map((child) => (\r\n//             <TreeNode key={child.name} data={child} />\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </li>\r\n//   );\r\n// }\r\n\r\n// export default TreeNode;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./flowtree.css\";\r\n\r\nfunction TreeNode({ data }) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleMinimizeClick = (e) => {\r\n    e.stopPropagation();\r\n    setCollapsed(true);\r\n  };\r\n\r\n  const renderChild = (child) => {\r\n    if (typeof child === \"object\") {\r\n      return <TreeNode key={child.name} data={child} />;\r\n    } else {\r\n      return <span className=\"tree-node__value\">\"{child}\"</span>;\r\n    }\r\n  };\r\n\r\n  const isObjectEmpty = (obj) => {\r\n    return Object.keys(obj).length === 0;\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"tree-node__content\" onClick={handleClick}>\r\n        <span className=\"tree-node__toggle\">\r\n          {isObjectEmpty(data) ? \"\" : collapsed ? \"+\" : \"-\"}\r\n        </span>\r\n        <span className=\"tree-node__label\">{data.name}</span>\r\n        {Object.values(data)\r\n          .filter((value) => typeof value !== \"object\")\r\n          .map((value) => renderChild(value))}\r\n        {isObjectEmpty(data) && <span className=\"tree-node__value\">{\"{}\"}</span>}\r\n        {!isObjectEmpty(data) && collapsed && (\r\n          <button\r\n            className=\"tree-node__minimize\"\r\n            onClick={handleMinimizeClick}\r\n          >\r\n            Minimize\r\n          </button>\r\n        )}\r\n      </div>\r\n      {!isObjectEmpty(data) && (\r\n        <ul\r\n          className={`tree-node__children ${\r\n            collapsed ? \"tree-node__children--collapsed\" : \"\"\r\n          }`}\r\n        >\r\n          {Object.values(data)\r\n            .filter((value) => typeof value === \"object\")\r\n            .map((child) => (\r\n              <TreeNode key={child.name} data={child} />\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction TreeView({ apiUrl }) {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(apiUrl);\r\n      const jsonData = await response.json();\r\n      setData([jsonData]);\r\n      console.log\r\n    };\r\n\r\n    fetchData();\r\n  }, [apiUrl]);\r\n\r\n  return (\r\n    <ul className=\"tree-view\">\r\n      {data.map((item) => (\r\n        <TreeNode key={item.name} data={item} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TreeView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
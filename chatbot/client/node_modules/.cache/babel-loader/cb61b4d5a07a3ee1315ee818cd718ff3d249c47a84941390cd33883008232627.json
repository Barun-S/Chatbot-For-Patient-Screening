{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport { useCallback, useRef, useState } from 'react';\nexport default function useStateRef(initialState) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var ref = useRef();\n  var setValue = useCallback(function (nextValue) {\n    if (typeof nextValue === 'function') {\n      setValue(function (state) {\n        nextValue = nextValue(state);\n        ref.current = nextValue;\n        return nextValue;\n      });\n    } else {\n      ref.current = nextValue;\n      setValue(nextValue);\n    }\n  }, [ref]);\n  ref.current = state;\n  return [state, setState, ref];\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,eAAe,SAASC,WAAT,CAAqBC,YAArB,EAAmC;EAChD,gBAA0BF,QAAQ,CAACE,YAAD,CAAlC;IAAAC;IAAOC,KAAP;IAAcC,QAAd;EACA,IAAMC,GAAG,GAAGP,MAAM,EAAlB;EACA,IAAMQ,QAAQ,GAAGT,WAAW,CAC1B,mBAAS,EAAI;IACX,IAAI,OAAOU,SAAP,KAAqB,UAAzB,EAAqC;MACnCD,QAAQ,CAAC,eAAK,EAAI;QAChBC,SAAS,GAAGA,SAAS,CAACJ,KAAD,CAArB;QAEAE,GAAG,CAACG,OAAJ,GAAcD,SAAd;QAEA,OAAOA,SAAP;MACD,CANO,CAAR;IAOD,CARD,MAQO;MACLF,GAAG,CAACG,OAAJ,GAAcD,SAAd;MAEAD,QAAQ,CAACC,SAAD,CAAR;IACD;EACF,CAfyB,EAgB1B,CAACF,GAAD,CAhB0B,CAA5B;EAmBAA,GAAG,CAACG,OAAJ,GAAcL,KAAd;EAEA,OAAO,CAACA,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,CAAP;AACD","names":["useCallback","useRef","useState","useStateRef","initialState","_useState2","state","setState","ref","setValue","nextValue","current"],"sources":["C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\node_modules\\react-scroll-to-bottom\\src\\hooks\\internal\\useStateRef.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport default function useStateRef(initialState) {\n  const [state, setState] = useState(initialState);\n  const ref = useRef();\n  const setValue = useCallback(\n    nextValue => {\n      if (typeof nextValue === 'function') {\n        setValue(state => {\n          nextValue = nextValue(state);\n\n          ref.current = nextValue;\n\n          return nextValue;\n        });\n      } else {\n        ref.current = nextValue;\n\n        setValue(nextValue);\n      }\n    },\n    [ref]\n  );\n\n  ref.current = state;\n\n  return [state, setState, ref];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
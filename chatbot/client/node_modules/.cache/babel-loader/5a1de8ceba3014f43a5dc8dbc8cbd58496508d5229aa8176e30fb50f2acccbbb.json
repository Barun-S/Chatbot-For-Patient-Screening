{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\graphs\\\\ReactFlowRenderer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, ConnectionLineType } from \"react-flow-renderer\";\n// import { edges as initialEdges } from \"./fever_elements\";\nimport { Button, Modal, Input, Form } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReactFlowRenderer(_ref) {\n  _s();\n  let {\n    initialNodes,\n    initialEdges\n  } = _ref;\n  initialNodes = initialNodes.map(node => ({\n    id: node.id,\n    data: {\n      label: node.label\n    },\n    position: {\n      x: node.x,\n      y: node.y\n    }\n  }));\n  initialEdges = initialEdges.map(edge => ({\n    id: edge.id,\n    source: edge.source,\n    target: edge.target\n  }));\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge({\n    ...params,\n    type: ConnectionLineType.SmoothStep,\n    animated: true,\n    style: {\n      stroke: \"red\"\n    }\n  }, eds)), [setEdges]);\n  const getNodeId = () => Math.random();\n  function onInit() {\n    console.log(\"Logged\");\n  }\n  function displayCustomNamedNodeModal() {\n    setIsModalVisible(true);\n  }\n  function handleCancel() {\n    setIsModalVisible(false);\n  }\n  function handleOk(data) {\n    onAdd(data.nodeName);\n    setIsModalVisible(false);\n  }\n  const onAdd = useCallback(data => {\n    const newNode = {\n      id: String(getNodeId()),\n      data: {\n        label: data\n      },\n      position: {\n        x: 50,\n        y: 0\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: handleOk,\n        autoComplete: \"off\",\n        name: \"new node\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Node Name\",\n          name: \"nodeName\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => displayCustomNamedNodeModal(),\n      children: \"Add Custom Name Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onInit: onInit,\n      fitView: true,\n      attributionPosition: \"bottom-left\",\n      connectionLineType: ConnectionLineType.SmoothStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s(ReactFlowRenderer, \"ZSyAHzEy2UytmdRwOIsAlBxwVv4=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ReactFlowRenderer;\nexport default ReactFlowRenderer;\nvar _c;\n$RefreshReg$(_c, \"ReactFlowRenderer\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","useNodesState","useEdgesState","ConnectionLineType","Button","Modal","Input","Form","ReactFlowRenderer","initialNodes","initialEdges","map","node","id","data","label","position","x","y","edge","source","target","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","isModalVisible","setIsModalVisible","onConnect","params","eds","type","SmoothStep","animated","style","stroke","getNodeId","Math","random","onInit","console","log","displayCustomNamedNodeModal","handleCancel","handleOk","onAdd","nodeName","newNode","String","nds","concat","height","margin"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graphs/ReactFlowRenderer.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  ConnectionLineType,\r\n} from \"react-flow-renderer\";\r\n// import { edges as initialEdges } from \"./fever_elements\";\r\nimport { Button, Modal, Input, Form } from \"antd\";\r\n\r\nfunction ReactFlowRenderer({ initialNodes, initialEdges }) {\r\n    initialNodes = initialNodes.map(node => ({\r\n        id: node.id,\r\n        data: { label: node.label },\r\n        position: { x: node.x, y: node.y }\r\n    }));\r\n\r\n    initialEdges = initialEdges.map(edge => ({\r\n        id: edge.id,\r\n        source: edge.source,\r\n        target: edge.target\r\n    }));\r\n    \r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const onConnect = useCallback(\r\n      (params) =>\r\n        setEdges((eds) =>\r\n          addEdge(\r\n            {\r\n              ...params,\r\n              type: ConnectionLineType.SmoothStep,\r\n              animated: true,\r\n              style: { stroke: \"red\" },\r\n            },\r\n            eds\r\n          )\r\n        ),\r\n      [setEdges]\r\n    );\r\n    const getNodeId = () => Math.random();\r\n    function onInit() {\r\n      console.log(\"Logged\");\r\n    }\r\n    function displayCustomNamedNodeModal() {\r\n      setIsModalVisible(true);\r\n    }\r\n    function handleCancel() {\r\n      setIsModalVisible(false);\r\n    }\r\n    function handleOk(data) {\r\n      onAdd(data.nodeName);\r\n      setIsModalVisible(false);\r\n    }\r\n    const onAdd = useCallback(\r\n      (data) => {\r\n        const newNode = {\r\n          id: String(getNodeId()),\r\n          data: { label: data },\r\n          position: {\r\n            x: 50,\r\n            y: 0,\r\n          },\r\n        };\r\n        setNodes((nds) => nds.concat(newNode));\r\n      },\r\n      [setNodes]\r\n    );\r\n    return (\r\n      <div style={{ height: \"100vh\", margin: \"10px\" }}>\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Form onFinish={handleOk} autoComplete=\"off\" name=\"new node\">\r\n            <Form.Item label=\"Node Name\" name=\"nodeName\">\r\n              <Input />\r\n            </Form.Item>\r\n  \r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Button type=\"primary\" onClick={() => displayCustomNamedNodeModal()}>\r\n          Add Custom Name Node\r\n        </Button>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          onInit={onInit}\r\n          fitView\r\n          attributionPosition=\"bottom-left\"\r\n          connectionLineType={ConnectionLineType.SmoothStep}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default ReactFlowRenderer;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
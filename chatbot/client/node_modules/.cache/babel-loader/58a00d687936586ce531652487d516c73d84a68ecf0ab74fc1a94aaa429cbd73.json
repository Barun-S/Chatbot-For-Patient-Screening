{"ast":null,"code":"// import React, { useState, useCallback } from \"react\";\n// import ReactFlow, {\n//   addEdge,\n//   useNodesState,\n//   useEdgesState,\n//   ConnectionLineType,\n// } from \"react-flow-renderer\";\n// import { nodes as initialNodes, edges as initialEdges } from \"./elements\";\n// import { Button, Modal, Input, Form } from \"antd\";\n\n// function ReactFlowRenderer() {\n//   const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n//   const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n//   const [isModalVisible, setIsModalVisible] = useState(false);\n//   const onConnect = useCallback(\n//     (params) =>\n//       setEdges((eds) =>\n//         addEdge(\n//           {\n//             ...params,\n//             type: ConnectionLineType.SmoothStep,\n//             animated: true,\n//             style: { stroke: \"red\" },\n//           },\n//           eds\n//         )\n//       ),\n//     [setEdges]\n//   );\n//   const getNodeId = () => Math.random();\n//   function onInit() {\n//     console.log(\"Logged\");\n//   }\n//   function displayCustomNamedNodeModal() {\n//     setIsModalVisible(true);\n//   }\n//   function handleCancel() {\n//     setIsModalVisible(false);\n//   }\n//   function handleOk(data) {\n//     onAdd(data.nodeName);\n//     setIsModalVisible(false);\n//   }\n//   const onAdd = useCallback(\n//     (data) => {\n//       const newNode = {\n//         id: String(getNodeId()),\n//         data: { label: data },\n//         position: {\n//           x: 50,\n//           y: 0,\n//         },\n//       };\n//       setNodes((nds) => nds.concat(newNode));\n//     },\n//     [setNodes]\n//   );\n//   return (\n//     <div style={{ height: \"100vh\", margin: \"10px\" }}>\n//       <Modal\n//         title=\"Basic Modal\"\n//         visible={isModalVisible}\n//         onCancel={handleCancel}\n//       >\n//         <Form onFinish={handleOk} autoComplete=\"off\" name=\"new node\">\n//           <Form.Item label=\"Node Name\" name=\"nodeName\">\n//             <Input />\n//           </Form.Item>\n\n//           <Form.Item>\n//             <Button type=\"primary\" htmlType=\"submit\">\n//               Submit\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//       <Button type=\"primary\" onClick={() => displayCustomNamedNodeModal()}>\n//         Add Custom Name Node\n//       </Button>\n//       <ReactFlow\n//         nodes={nodes}\n//         edges={edges}\n//         onNodesChange={onNodesChange}\n//         onEdgesChange={onEdgesChange}\n//         onConnect={onConnect}\n//         onInit={onInit}\n//         fitView\n//         attributionPosition=\"bottom-left\"\n//         connectionLineType={ConnectionLineType.SmoothStep}\n//       />\n//     </div>\n//   );\n// }\n\n// export default ReactFlowRenderer;","map":{"version":3,"names":[],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graph.js"],"sourcesContent":["// import React, { useState, useCallback } from \"react\";\r\n// import ReactFlow, {\r\n//   addEdge,\r\n//   useNodesState,\r\n//   useEdgesState,\r\n//   ConnectionLineType,\r\n// } from \"react-flow-renderer\";\r\n// import { nodes as initialNodes, edges as initialEdges } from \"./elements\";\r\n// import { Button, Modal, Input, Form } from \"antd\";\r\n\r\n// function ReactFlowRenderer() {\r\n//   const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n//   const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n//   const [isModalVisible, setIsModalVisible] = useState(false);\r\n//   const onConnect = useCallback(\r\n//     (params) =>\r\n//       setEdges((eds) =>\r\n//         addEdge(\r\n//           {\r\n//             ...params,\r\n//             type: ConnectionLineType.SmoothStep,\r\n//             animated: true,\r\n//             style: { stroke: \"red\" },\r\n//           },\r\n//           eds\r\n//         )\r\n//       ),\r\n//     [setEdges]\r\n//   );\r\n//   const getNodeId = () => Math.random();\r\n//   function onInit() {\r\n//     console.log(\"Logged\");\r\n//   }\r\n//   function displayCustomNamedNodeModal() {\r\n//     setIsModalVisible(true);\r\n//   }\r\n//   function handleCancel() {\r\n//     setIsModalVisible(false);\r\n//   }\r\n//   function handleOk(data) {\r\n//     onAdd(data.nodeName);\r\n//     setIsModalVisible(false);\r\n//   }\r\n//   const onAdd = useCallback(\r\n//     (data) => {\r\n//       const newNode = {\r\n//         id: String(getNodeId()),\r\n//         data: { label: data },\r\n//         position: {\r\n//           x: 50,\r\n//           y: 0,\r\n//         },\r\n//       };\r\n//       setNodes((nds) => nds.concat(newNode));\r\n//     },\r\n//     [setNodes]\r\n//   );\r\n//   return (\r\n//     <div style={{ height: \"100vh\", margin: \"10px\" }}>\r\n//       <Modal\r\n//         title=\"Basic Modal\"\r\n//         visible={isModalVisible}\r\n//         onCancel={handleCancel}\r\n//       >\r\n//         <Form onFinish={handleOk} autoComplete=\"off\" name=\"new node\">\r\n//           <Form.Item label=\"Node Name\" name=\"nodeName\">\r\n//             <Input />\r\n//           </Form.Item>\r\n\r\n//           <Form.Item>\r\n//             <Button type=\"primary\" htmlType=\"submit\">\r\n//               Submit\r\n//             </Button>\r\n//           </Form.Item>\r\n//         </Form>\r\n//       </Modal>\r\n//       <Button type=\"primary\" onClick={() => displayCustomNamedNodeModal()}>\r\n//         Add Custom Name Node\r\n//       </Button>\r\n//       <ReactFlow\r\n//         nodes={nodes}\r\n//         edges={edges}\r\n//         onNodesChange={onNodesChange}\r\n//         onEdgesChange={onEdgesChange}\r\n//         onConnect={onConnect}\r\n//         onInit={onInit}\r\n//         fitView\r\n//         attributionPosition=\"bottom-left\"\r\n//         connectionLineType={ConnectionLineType.SmoothStep}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ReactFlowRenderer;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\graph.js\";\nimport React, { useState } from \"react\";\n\n// const Dropdown = ({ options }) => {\n//   const [selectedOption, setSelectedOption] = useState(\"\");\n\n//   const handleOptionSelect = (option) => {\n//     setSelectedOption(option);\n//     window.location.href = option.url; // redirect to the selected option's URL\n//   };\n\n//   return (\n//     <div>\n//       <select value={selectedOption} onChange={(e) => handleOptionSelect(options.find(option => option.label === e.target.value))}>\n//         <option value=\"\">Select an option</option>\n//         {options.map((option) => (\n//           <option key={option.label} value={option.label}>\n//             {option.label}\n//           </option>\n//         ))}\n//       </select>\n//     </div>\n//   );\n// };\n\n// import \"./Dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      selectedOption: null,\n      loading: false\n    };\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"http://localhost:5001/options\").then(response => response.json()).then(data => {\n      const options = data.map(label => ({\n        value: `http://example.com/data/${label}`,\n        label\n      }));\n      this.setState({\n        options,\n        loading: false\n      });\n    }).catch(error => {\n      console.error(error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  handleOptionSelect(option) {\n    const url = option.value;\n    fetch(`http://localhost:5000/options?label=URL: ${url}`).then(response => response.json()).then(data => {\n      console.log(data.label);\n      // update state with loaded data\n    }).catch(error => {\n      console.error(error);\n      // handle error\n    });\n  }\n\n  render() {\n    const {\n      options,\n      selectedOption,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading options...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: event => {\n          const selectedOption = event.target.value;\n          this.setState({\n            selectedOption\n          });\n          this.handleOptionSelect(selectedOption);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select an option --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), options.map(_ref => {\n          let {\n            value,\n            label\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: value,\n            children: label\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Dropdown;","map":{"version":3,"names":["React","useState","Dropdown","Component","constructor","props","state","options","selectedOption","loading","handleOptionSelect","bind","componentDidMount","setState","fetch","then","response","json","data","map","label","value","catch","error","console","option","url","log","render","event","target"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graph.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// const Dropdown = ({ options }) => {\r\n//   const [selectedOption, setSelectedOption] = useState(\"\");\r\n\r\n//   const handleOptionSelect = (option) => {\r\n//     setSelectedOption(option);\r\n//     window.location.href = option.url; // redirect to the selected option's URL\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <select value={selectedOption} onChange={(e) => handleOptionSelect(options.find(option => option.label === e.target.value))}>\r\n//         <option value=\"\">Select an option</option>\r\n//         {options.map((option) => (\r\n//           <option key={option.label} value={option.label}>\r\n//             {option.label}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n// import \"./Dropdown.css\";\r\n\r\nclass Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      selectedOption: null,\r\n      loading: false,\r\n    };\r\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(\"http://localhost:5001/options\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const options = data.map((label) => ({\r\n          value: `http://example.com/data/${label}`,\r\n          label,\r\n        }));\r\n        this.setState({ options, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  handleOptionSelect(option) {\r\n    const url = option.value;\r\n    fetch(`http://localhost:5000/options?label=URL: ${url}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.label);\r\n        // update state with loaded data\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // handle error\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { options, selectedOption, loading } = this.state;\r\n    return (\r\n      <div className=\"dropdown-container\">\r\n        <h2>Select an option:</h2>\r\n        {loading ? (\r\n          <p>Loading options...</p>\r\n        ) : (\r\n          <select\r\n            value={selectedOption}\r\n            onChange={(event) => {\r\n              const selectedOption = event.target.value;\r\n              this.setState({ selectedOption });\r\n              this.handleOptionSelect(selectedOption);\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- Select an option --\r\n            </option>\r\n            {options.map(({ value, label }) => (\r\n              <option key={value} value={value}>\r\n                {label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildLinkPathDefinition = buildLinkPathDefinition;\nvar _link = require(\"./link.const\");\nvar _RADIUS_STRATEGIES;\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Computes radius value for a straight line.\n * @returns {number} radius for straight line.\n * @memberof Link/helper\n */\nfunction straightLineRadius() {\n  return 0;\n}\n/**\n * Computes radius for a smooth curve effect.\n * @param {number} x1 - x value for point 1\n * @param {number} y1 - y value for point 1\n * @param {number} x2 - y value for point 2\n * @param {number} y2 - y value for point 2\n * @returns{number} value of radius.\n * @memberof Link/helper\n */\n\nfunction smoothCurveRadius(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * Computes radius value for a full curve (semi circumference).\n * @returns {number} radius for full curve.\n * @memberof Link/helper\n */\n\nfunction fullCurveRadius() {\n  return 1;\n}\nvar RADIUS_STRATEGIES = (_RADIUS_STRATEGIES = {}, _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.STRAIGHT, straightLineRadius), _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.CURVE_SMOOTH, smoothCurveRadius), _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.CURVE_FULL, fullCurveRadius), _RADIUS_STRATEGIES);\n/**\n * Get a strategy to compute line radius.<br/>\n * *CURVE_SMOOTH* type inspired by {@link http://bl.ocks.org/mbostock/1153292|mbostock - Mobile Patent Suits}.\n * @param {string} [type=LINE_TYPES.STRAIGHT] type of curve to get radius strategy from.\n * @returns {Function} a function that calculates a radius\n * to match curve type expectation. Fallback is the straight line.\n * @memberof Link/helper\n */\n\nfunction getRadiusStrategy(type) {\n  return RADIUS_STRATEGIES[type] || RADIUS_STRATEGIES[_link.LINE_TYPES.STRAIGHT];\n}\n/**\n * This method returns the path definition for a given link base on the line type\n * and the link source and target.\n * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d|d attribute mdn}\n * @param {Object} sourceCoords - link sourceCoords\n * @param {Object} targetCoords - link targetCoords\n * @param {string} type - the link line type\n * @param {Array.<Object>} breakPoints - additional set of points that the link will cross\n * @returns {string} the path definition for the requested link\n * @memberof Link/helper\n */\n\nfunction buildLinkPathDefinition() {\n  var sourceCoords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var targetCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _link.LINE_TYPES.STRAIGHT;\n  var breakPoints = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var sx = sourceCoords.x,\n    sy = sourceCoords.y;\n  var validType = _link.LINE_TYPES[type] || _link.LINE_TYPES.STRAIGHT;\n  var calcRadiusFn = getRadiusStrategy(validType);\n  var restOfLinkPoints = [].concat(_toConsumableArray(breakPoints), [targetCoords]);\n  var restOfLinkPath = restOfLinkPoints.map(function (_ref, i) {\n    var x = _ref.x,\n      y = _ref.y;\n    var _ref2 = i > 0 ? restOfLinkPoints[i - 1] : sourceCoords,\n      px = _ref2.x,\n      py = _ref2.y;\n    var radius = calcRadiusFn(px, py, x, y);\n    return \" A\".concat(radius, \",\").concat(radius, \" 0 0,1 \").concat(x, \",\").concat(y);\n  }).join(\"\");\n  return \"M\".concat(sx, \",\").concat(sy).concat(restOfLinkPath);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","buildLinkPathDefinition","_link","require","_RADIUS_STRATEGIES","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","_defineProperty","obj","key","enumerable","configurable","writable","straightLineRadius","smoothCurveRadius","x1","y1","x2","y2","dx","dy","Math","sqrt","fullCurveRadius","RADIUS_STRATEGIES","LINE_TYPES","STRAIGHT","CURVE_SMOOTH","CURVE_FULL","getRadiusStrategy","type","sourceCoords","arguments","undefined","targetCoords","breakPoints","sx","x","sy","y","validType","calcRadiusFn","restOfLinkPoints","concat","restOfLinkPath","map","_ref","_ref2","px","py","radius","join"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/node_modules/react-d3-graph/lib/components/link/link.helper.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildLinkPathDefinition = buildLinkPathDefinition;\n\nvar _link = require(\"./link.const\");\n\nvar _RADIUS_STRATEGIES;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Computes radius value for a straight line.\n * @returns {number} radius for straight line.\n * @memberof Link/helper\n */\nfunction straightLineRadius() {\n  return 0;\n}\n/**\n * Computes radius for a smooth curve effect.\n * @param {number} x1 - x value for point 1\n * @param {number} y1 - y value for point 1\n * @param {number} x2 - y value for point 2\n * @param {number} y2 - y value for point 2\n * @returns{number} value of radius.\n * @memberof Link/helper\n */\n\n\nfunction smoothCurveRadius(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * Computes radius value for a full curve (semi circumference).\n * @returns {number} radius for full curve.\n * @memberof Link/helper\n */\n\n\nfunction fullCurveRadius() {\n  return 1;\n}\n\nvar RADIUS_STRATEGIES = (_RADIUS_STRATEGIES = {}, _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.STRAIGHT, straightLineRadius), _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.CURVE_SMOOTH, smoothCurveRadius), _defineProperty(_RADIUS_STRATEGIES, _link.LINE_TYPES.CURVE_FULL, fullCurveRadius), _RADIUS_STRATEGIES);\n/**\n * Get a strategy to compute line radius.<br/>\n * *CURVE_SMOOTH* type inspired by {@link http://bl.ocks.org/mbostock/1153292|mbostock - Mobile Patent Suits}.\n * @param {string} [type=LINE_TYPES.STRAIGHT] type of curve to get radius strategy from.\n * @returns {Function} a function that calculates a radius\n * to match curve type expectation. Fallback is the straight line.\n * @memberof Link/helper\n */\n\nfunction getRadiusStrategy(type) {\n  return RADIUS_STRATEGIES[type] || RADIUS_STRATEGIES[_link.LINE_TYPES.STRAIGHT];\n}\n/**\n * This method returns the path definition for a given link base on the line type\n * and the link source and target.\n * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d|d attribute mdn}\n * @param {Object} sourceCoords - link sourceCoords\n * @param {Object} targetCoords - link targetCoords\n * @param {string} type - the link line type\n * @param {Array.<Object>} breakPoints - additional set of points that the link will cross\n * @returns {string} the path definition for the requested link\n * @memberof Link/helper\n */\n\n\nfunction buildLinkPathDefinition() {\n  var sourceCoords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var targetCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _link.LINE_TYPES.STRAIGHT;\n  var breakPoints = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var sx = sourceCoords.x,\n      sy = sourceCoords.y;\n  var validType = _link.LINE_TYPES[type] || _link.LINE_TYPES.STRAIGHT;\n  var calcRadiusFn = getRadiusStrategy(validType);\n  var restOfLinkPoints = [].concat(_toConsumableArray(breakPoints), [targetCoords]);\n  var restOfLinkPath = restOfLinkPoints.map(function (_ref, i) {\n    var x = _ref.x,\n        y = _ref.y;\n\n    var _ref2 = i > 0 ? restOfLinkPoints[i - 1] : sourceCoords,\n        px = _ref2.x,\n        py = _ref2.y;\n\n    var radius = calcRadiusFn(px, py, x, y);\n    return \" A\".concat(radius, \",\").concat(radius, \" 0 0,1 \").concat(x, \",\").concat(y);\n  }).join(\"\");\n  return \"M\".concat(sx, \",\").concat(sy).concat(restOfLinkPath);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\graph.js\";\nimport React from 'react';\nimport ReactFlow, { Controls, MiniMap } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = _ref => {\n  let {\n    data\n  } = _ref;\n  const elements = [];\n\n  // Add a node for each symptom\n  const symptomNode = {\n    id: data.symptom,\n    data: {\n      label: data.symptom\n    },\n    position: {\n      x: 0,\n      y: 0\n    }\n  };\n  elements.push(symptomNode);\n\n  // Add nodes for each question and edges for its conditions if they exist\n  data.questions.forEach((question, index) => {\n    const questionNode = {\n      id: `question-${index}`,\n      data: {\n        label: question.ques\n      },\n      position: {\n        x: (index + 1) * 100,\n        y: (index + 1) * 100\n      }\n    };\n    elements.push(questionNode);\n\n    // Add edges for 'yes' conditions\n    if (question.condition && question.condition.yes) {\n      question.condition.yes.forEach((nestedQ, i) => {\n        const edge = {\n          id: `edge-${index}-yes-${i}`,\n          source: `question-${index}`,\n          target: `nestedQ-${index}-yes-${i}`,\n          data: {\n            label: 'yes'\n          },\n          animated: true\n        };\n        elements.push(edge);\n        const nestedNode = {\n          id: `nestedQ-${index}-yes-${i}`,\n          data: {\n            label: nestedQ\n          },\n          position: {\n            x: (index + 2) * 100,\n            y: (i + 1) * 100\n          }\n        };\n        elements.push(nestedNode);\n      });\n    }\n\n    // Add edges for 'no' conditions\n    if (question.condition && question.condition.no) {\n      question.condition.no.forEach((nestedQ, i) => {\n        const edge = {\n          id: `edge-${index}-no-${i}`,\n          source: `question-${index}`,\n          target: `nestedQ-${index}-no-${i}`,\n          data: {\n            label: 'no'\n          },\n          animated: true\n        };\n        elements.push(edge);\n        const nestedNode = {\n          id: `nestedQ-${index}-no-${i}`,\n          data: {\n            label: nestedQ\n          },\n          position: {\n            x: (index + 2) * 100,\n            y: (i + 1) * 100\n          }\n        };\n        elements.push(nestedNode);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","ReactFlow","Controls","MiniMap","Graph","data","elements","symptomNode","id","symptom","label","position","x","y","push","questions","forEach","question","index","questionNode","ques","condition","yes","nestedQ","i","edge","source","target","animated","nestedNode","no","height"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graph.js"],"sourcesContent":["import React from 'react';\r\nimport ReactFlow, { Controls, MiniMap } from 'react-flow-renderer';\r\n\r\nconst Graph = ({ data }) => {\r\n  const elements = [];\r\n\r\n  // Add a node for each symptom\r\n  const symptomNode = {\r\n    id: data.symptom,\r\n    data: { label: data.symptom },\r\n    position: { x: 0, y: 0 },\r\n  };\r\n  elements.push(symptomNode);\r\n\r\n  // Add nodes for each question and edges for its conditions if they exist\r\n  data.questions.forEach((question, index) => {\r\n    const questionNode = {\r\n      id: `question-${index}`,\r\n      data: { label: question.ques },\r\n      position: { x: (index + 1) * 100, y: (index + 1) * 100 },\r\n    };\r\n    elements.push(questionNode);\r\n\r\n    // Add edges for 'yes' conditions\r\n    if (question.condition && question.condition.yes) {\r\n      question.condition.yes.forEach((nestedQ, i) => {\r\n        const edge = {\r\n          id: `edge-${index}-yes-${i}`,\r\n          source: `question-${index}`,\r\n          target: `nestedQ-${index}-yes-${i}`,\r\n          data: { label: 'yes' },\r\n          animated: true,\r\n        };\r\n        elements.push(edge);\r\n\r\n        const nestedNode = {\r\n          id: `nestedQ-${index}-yes-${i}`,\r\n          data: { label: nestedQ },\r\n          position: { x: (index + 2) * 100, y: (i + 1) * 100 },\r\n        };\r\n        elements.push(nestedNode);\r\n      });\r\n    }\r\n\r\n    // Add edges for 'no' conditions\r\n    if (question.condition && question.condition.no) {\r\n      question.condition.no.forEach((nestedQ, i) => {\r\n        const edge = {\r\n          id: `edge-${index}-no-${i}`,\r\n          source: `question-${index}`,\r\n          target: `nestedQ-${index}-no-${i}`,\r\n          data: { label: 'no' },\r\n          animated: true,\r\n        };\r\n        elements.push(edge);\r\n\r\n        const nestedNode = {\r\n          id: `nestedQ-${index}-no-${i}`,\r\n          data: { label: nestedQ },\r\n          position: { x: (index + 2) * 100, y: (i + 1) * 100 },\r\n        };\r\n        elements.push(nestedNode);\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ height: '600px' }}>\r\n      <ReactFlow elements={elements}>\r\n        <MiniMap />\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\graph.js\";\nimport React from 'react';\nimport Graph from 'react-d3-graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomGraph = _ref => {\n  let {\n    data\n  } = _ref;\n  const nodes = [{\n    id: data[0].symptom,\n    color: '#3B4C5E',\n    size: 600\n  }, ...data[0].questions.map((q, i) => {\n    return {\n      id: q.ques,\n      color: '#3B4C5E',\n      size: 300,\n      x: 500,\n      y: 200 * (i + 1)\n    };\n  })];\n  const links = [];\n  const yesLinks = [];\n  const noLinks = [];\n  data[0].questions.forEach((q, i) => {\n    if (q.condition && q.condition.yes) {\n      q.condition.yes.forEach(nq => {\n        yesLinks.push({\n          source: q.ques,\n          target: nq,\n          type: 'CURVE_SMOOTH',\n          labelProperty: 'yes'\n        });\n      });\n    }\n    if (q.condition && q.condition.no) {\n      q.condition.no.forEach(nq => {\n        noLinks.push({\n          source: q.ques,\n          target: nq,\n          type: 'CURVE_SMOOTH',\n          labelProperty: 'no'\n        });\n      });\n    }\n  });\n  links.push(...yesLinks, ...noLinks);\n  const dataGraph = {\n    nodes: nodes,\n    links: links\n  };\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    node: {\n      color: '#3B4C5E',\n      size: 300,\n      highlightStrokeColor: '#999',\n      labelProperty: 'id',\n      fontColor: '#fff',\n      fontSize: 18\n    },\n    link: {\n      highlightColor: '#999',\n      strokeWidth: 5\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Graph, {\n      id: \"graph-id\",\n      data: dataGraph,\n      config: myConfig,\n      style: {\n        width: '100%',\n        height: '800px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = SymptomGraph;\nexport default SymptomGraph;\n\n// CSS styles\nconst styles = `\n  .node {\n    cursor: pointer;\n  }\n\n  .node circle {\n    fill: #fff;\n    stroke: steelblue;\n    stroke-width: 3px;\n  }\n\n  .node text {\n    font: 12px sans-serif;\n  }\n\n  .link {\n    fill: none;\n    stroke: #ccc;\n    stroke-width: 2px;\n  }\n\n  .link.yes {\n    stroke: #00ff00;\n  }\n\n  .link.no {\n    stroke: #ff0000;\n  }\n`;\nconst styleSheet = document.createElement('style');\nstyleSheet.type = 'text/css';\nstyleSheet.innerText = styles;\ndocument.head.appendChild(styleSheet);\nvar _c;\n$RefreshReg$(_c, \"SymptomGraph\");","map":{"version":3,"names":["React","Graph","SymptomGraph","data","nodes","id","symptom","color","size","questions","map","q","i","ques","x","y","links","yesLinks","noLinks","forEach","condition","yes","nq","push","source","target","type","labelProperty","no","dataGraph","myConfig","nodeHighlightBehavior","node","highlightStrokeColor","fontColor","fontSize","link","highlightColor","strokeWidth","textAlign","width","height","styles","styleSheet","document","createElement","innerText","head","appendChild"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graph.js"],"sourcesContent":["import React from 'react';\r\nimport Graph from 'react-d3-graph';\r\n\r\nconst SymptomGraph = ({ data }) => {\r\n  const nodes = [    {      id: data[0].symptom,\r\n      color: '#3B4C5E',\r\n      size: 600,\r\n    },\r\n    ...data[0].questions.map((q, i) => {\r\n      return {\r\n        id: q.ques,\r\n        color: '#3B4C5E',\r\n        size: 300,\r\n        x: 500,\r\n        y: 200 * (i + 1),\r\n      };\r\n    }),\r\n  ];\r\n\r\n  const links = [];\r\n  const yesLinks = [];\r\n  const noLinks = [];\r\n\r\n  data[0].questions.forEach((q, i) => {\r\n    if (q.condition && q.condition.yes) {\r\n      q.condition.yes.forEach((nq) => {\r\n        yesLinks.push({\r\n          source: q.ques,\r\n          target: nq,\r\n          type: 'CURVE_SMOOTH',\r\n          labelProperty: 'yes',\r\n        });\r\n      });\r\n    }\r\n    if (q.condition && q.condition.no) {\r\n      q.condition.no.forEach((nq) => {\r\n        noLinks.push({\r\n          source: q.ques,\r\n          target: nq,\r\n          type: 'CURVE_SMOOTH',\r\n          labelProperty: 'no',\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  links.push(...yesLinks, ...noLinks);\r\n\r\n  const dataGraph = {\r\n    nodes: nodes,\r\n    links: links,\r\n  };\r\n\r\n  const myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    node: {\r\n      color: '#3B4C5E',\r\n      size: 300,\r\n      highlightStrokeColor: '#999',\r\n      labelProperty: 'id',\r\n      fontColor: '#fff',\r\n      fontSize: 18,\r\n    },\r\n    link: {\r\n      highlightColor: '#999',\r\n      strokeWidth: 5,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Graph\r\n        id=\"graph-id\"\r\n        data={dataGraph}\r\n        config={myConfig}\r\n        style={{ width: '100%', height: '800px' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomGraph;\r\n\r\n// CSS styles\r\nconst styles = `\r\n  .node {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .node circle {\r\n    fill: #fff;\r\n    stroke: steelblue;\r\n    stroke-width: 3px;\r\n  }\r\n\r\n  .node text {\r\n    font: 12px sans-serif;\r\n  }\r\n\r\n  .link {\r\n    fill: none;\r\n    stroke: #ccc;\r\n    stroke-width: 2px;\r\n  }\r\n\r\n  .link.yes {\r\n    stroke: #00ff00;\r\n  }\r\n\r\n  .link.no {\r\n    stroke: #ff0000;\r\n  }\r\n`;\r\n\r\nconst styleSheet = document.createElement('style');\r\nstyleSheet.type = 'text/css';\r\nstyleSheet.innerText = styles;\r\ndocument.head.appendChild(styleSheet);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
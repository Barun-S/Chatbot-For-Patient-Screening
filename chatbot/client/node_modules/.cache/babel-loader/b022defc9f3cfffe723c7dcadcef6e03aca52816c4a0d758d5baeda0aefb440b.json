{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\flowtree.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './flowtree.css';\nconst API_URL = \"http://localhost:5001/fetchalldata\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./TreeNode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const hasChildren = data.children && data.children.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node__content\",\n      children: [hasChildren && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isOpen ? faFolderOpen : faFolder,\n        className: \"tree-node__toggle\",\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__label\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), data.value && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node__value\",\n        children: [\"(\", data.value, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), hasChildren && isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tree-node__children\",\n      children: data.children.map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        data: child\n      }, child.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeNode, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = TreeNode;\nexport default TreeNode;\nvar _c;\n$RefreshReg$(_c, \"TreeNode\");","map":{"version":3,"names":["React","useState","useEffect","API_URL","FontAwesomeIcon","faFolder","faFolderOpen","TreeNode","data","isOpen","setIsOpen","toggle","hasChildren","children","length","name","value","map","child"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/flowtree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './flowtree.css';\r\nconst API_URL = \"http://localhost:5001/fetchalldata\";\r\n\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./TreeNode.css\";\r\n\r\nfunction TreeNode({ data }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const hasChildren = data.children && data.children.length > 0;\r\n\r\n  return (\r\n    <li className=\"tree-node\">\r\n      <div className=\"tree-node__content\">\r\n        {hasChildren && (\r\n          <FontAwesomeIcon\r\n            icon={isOpen ? faFolderOpen : faFolder}\r\n            className=\"tree-node__toggle\"\r\n            onClick={toggle}\r\n          />\r\n        )}\r\n        <span className=\"tree-node__label\">{data.name}</span>\r\n        {data.value && (\r\n          <span className=\"tree-node__value\">({data.value})</span>\r\n        )}\r\n      </div>\r\n      {hasChildren && isOpen && (\r\n        <ul className=\"tree-node__children\">\r\n          {data.children.map((child) => (\r\n            <TreeNode key={child.name} data={child} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TreeNode;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,MAAMC,OAAO,GAAG,oCAAoC;AAGpD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,EAAEC,YAAY,QAAQ,mCAAmC;AAC1E,OAAO,gBAAgB;AAAC;AAExB,SAASC,QAAQ,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,MAAM,GAAG,MAAM;IACnBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMG,WAAW,GAAGJ,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACK,QAAQ,CAACC,MAAM,GAAG,CAAC;EAE7D,oBACE;IAAI,SAAS,EAAC,WAAW;IAAA,wBACvB;MAAK,SAAS,EAAC,oBAAoB;MAAA,WAChCF,WAAW,iBACV,QAAC,eAAe;QACd,IAAI,EAAEH,MAAM,GAAGH,YAAY,GAAGD,QAAS;QACvC,SAAS,EAAC,mBAAmB;QAC7B,OAAO,EAAEM;MAAO;QAAA;QAAA;QAAA;MAAA,QAEnB,eACD;QAAM,SAAS,EAAC,kBAAkB;QAAA,UAAEH,IAAI,CAACO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,EACpDP,IAAI,CAACQ,KAAK,iBACT;QAAM,SAAS,EAAC,kBAAkB;QAAA,WAAC,GAAC,EAACR,IAAI,CAACQ,KAAK,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,EACLJ,WAAW,IAAIH,MAAM,iBACpB;MAAI,SAAS,EAAC,qBAAqB;MAAA,UAChCD,IAAI,CAACK,QAAQ,CAACI,GAAG,CAAEC,KAAK,iBACvB,QAAC,QAAQ;QAAkB,IAAI,EAAEA;MAAM,GAAxBA,KAAK,CAACH,IAAI;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAET;AAAC,GAjCQR,QAAQ;AAAA,KAARA,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
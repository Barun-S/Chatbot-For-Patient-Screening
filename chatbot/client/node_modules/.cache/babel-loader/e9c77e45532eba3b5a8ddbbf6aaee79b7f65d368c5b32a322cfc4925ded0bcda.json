{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _d3Shape = require(\"d3-shape\");\nvar _node = _interopRequireDefault(require(\"./node.const\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\n/**\n * @module Node/helper\n * @description\n * Some methods that help no the process of rendering a node.\n */\n\n/**\n * Converts a string that specifies a symbol into a concrete instance\n * of d3 symbol.<br/>\n * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol}\n * @param  {string} typeName - the string that specifies the symbol type (should be one of {@link #node-symbol-type|node.symbolType}).\n * @returns {Object} concrete instance of d3 symbol (defaults to circle).\n * @memberof Node/helper\n */\nfunction _convertTypeToD3Symbol(typeName) {\n  switch (typeName) {\n    case _node[\"default\"].SYMBOLS.CIRCLE:\n      return _d3Shape.symbolCircle;\n    case _node[\"default\"].SYMBOLS.CROSS:\n      return _d3Shape.symbolCross;\n    case _node[\"default\"].SYMBOLS.DIAMOND:\n      return _d3Shape.symbolDiamond;\n    case _node[\"default\"].SYMBOLS.SQUARE:\n      return _d3Shape.symbolSquare;\n    case _node[\"default\"].SYMBOLS.STAR:\n      return _d3Shape.symbolStar;\n    case _node[\"default\"].SYMBOLS.TRIANGLE:\n      return _d3Shape.symbolTriangle;\n    case _node[\"default\"].SYMBOLS.WYE:\n      return _d3Shape.symbolWye;\n    default:\n      return _d3Shape.symbolCircle;\n  }\n}\n/**\n * Build a d3 svg symbol based on passed symbol and symbol type.\n * @param  {number} [size=80] - the size of the symbol.\n * @param  {string} [symbolTypeDesc='circle'] - the string containing the type of symbol that we want to build\n * (should be one of {@link #node-symbol-type|node.symbolType}).\n * @returns {Object} concrete instance of d3 symbol.\n * @memberof Node/helper\n */\n\nfunction buildSvgSymbol() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _node[\"default\"].DEFAULT_NODE_SIZE;\n  var symbolTypeDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _node[\"default\"].SYMBOLS.CIRCLE;\n  return (0, _d3Shape.symbol)().size(function () {\n    return size;\n  }).type(function () {\n    return _convertTypeToD3Symbol(symbolTypeDesc);\n  })();\n}\n/**\n * return dx, dy, and potentially alignmentBaseline and textAnchor props to put label in correct position relative to node\n * @param {number | undefined} dx - default computed offset of label\n * @param {'left' | 'right' | 'top' | 'bottom' | 'center' | undefined} labelPosition - user specified position of label relative to node\n * @returns {{dx: string, dy: string} | {dx: string, dy: string, textAnchor: string, dominantBaseline: string}}\n * props to put text svg for label in correct spot. default case returns just dx and dy, without textAnchor and dominantBaseline\n * @memberof Node/helper\n */\n\nfunction getLabelPlacementProps(dx, labelPosition) {\n  switch (labelPosition) {\n    case \"right\":\n      return {\n        dx: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"start\"\n      };\n    case \"left\":\n      return {\n        dx: dx ? \"\".concat(-dx) : \"-\".concat(_node[\"default\"].NODE_LABEL_DX),\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"end\"\n      };\n    case \"top\":\n      return {\n        dx: \"0\",\n        dy: dx ? \"\".concat(-dx) : \"-\".concat(_node[\"default\"].NODE_LABEL_DX),\n        dominantBaseline: \"baseline\",\n        textAnchor: \"middle\"\n      };\n    case \"bottom\":\n      return {\n        dx: \"0\",\n        dy: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dominantBaseline: \"hanging\",\n        textAnchor: \"middle\"\n      };\n    case \"center\":\n      return {\n        dx: \"0\",\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\"\n      };\n    default:\n      return {\n        dx: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dy: _node[\"default\"].NODE_LABEL_DY\n      };\n  }\n}\nvar _default = {\n  buildSvgSymbol: buildSvgSymbol,\n  getLabelPlacementProps: getLabelPlacementProps\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_d3Shape","require","_node","_interopRequireDefault","obj","__esModule","_convertTypeToD3Symbol","typeName","SYMBOLS","CIRCLE","symbolCircle","CROSS","symbolCross","DIAMOND","symbolDiamond","SQUARE","symbolSquare","STAR","symbolStar","TRIANGLE","symbolTriangle","WYE","symbolWye","buildSvgSymbol","size","arguments","length","undefined","DEFAULT_NODE_SIZE","symbolTypeDesc","symbol","type","getLabelPlacementProps","dx","labelPosition","concat","NODE_LABEL_DX","dy","dominantBaseline","textAnchor","NODE_LABEL_DY","_default"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/node_modules/react-d3-graph/lib/components/node/node.helper.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _node = _interopRequireDefault(require(\"./node.const\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module Node/helper\n * @description\n * Some methods that help no the process of rendering a node.\n */\n\n/**\n * Converts a string that specifies a symbol into a concrete instance\n * of d3 symbol.<br/>\n * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol}\n * @param  {string} typeName - the string that specifies the symbol type (should be one of {@link #node-symbol-type|node.symbolType}).\n * @returns {Object} concrete instance of d3 symbol (defaults to circle).\n * @memberof Node/helper\n */\nfunction _convertTypeToD3Symbol(typeName) {\n  switch (typeName) {\n    case _node[\"default\"].SYMBOLS.CIRCLE:\n      return _d3Shape.symbolCircle;\n\n    case _node[\"default\"].SYMBOLS.CROSS:\n      return _d3Shape.symbolCross;\n\n    case _node[\"default\"].SYMBOLS.DIAMOND:\n      return _d3Shape.symbolDiamond;\n\n    case _node[\"default\"].SYMBOLS.SQUARE:\n      return _d3Shape.symbolSquare;\n\n    case _node[\"default\"].SYMBOLS.STAR:\n      return _d3Shape.symbolStar;\n\n    case _node[\"default\"].SYMBOLS.TRIANGLE:\n      return _d3Shape.symbolTriangle;\n\n    case _node[\"default\"].SYMBOLS.WYE:\n      return _d3Shape.symbolWye;\n\n    default:\n      return _d3Shape.symbolCircle;\n  }\n}\n/**\n * Build a d3 svg symbol based on passed symbol and symbol type.\n * @param  {number} [size=80] - the size of the symbol.\n * @param  {string} [symbolTypeDesc='circle'] - the string containing the type of symbol that we want to build\n * (should be one of {@link #node-symbol-type|node.symbolType}).\n * @returns {Object} concrete instance of d3 symbol.\n * @memberof Node/helper\n */\n\n\nfunction buildSvgSymbol() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _node[\"default\"].DEFAULT_NODE_SIZE;\n  var symbolTypeDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _node[\"default\"].SYMBOLS.CIRCLE;\n  return (0, _d3Shape.symbol)().size(function () {\n    return size;\n  }).type(function () {\n    return _convertTypeToD3Symbol(symbolTypeDesc);\n  })();\n}\n/**\n * return dx, dy, and potentially alignmentBaseline and textAnchor props to put label in correct position relative to node\n * @param {number | undefined} dx - default computed offset of label\n * @param {'left' | 'right' | 'top' | 'bottom' | 'center' | undefined} labelPosition - user specified position of label relative to node\n * @returns {{dx: string, dy: string} | {dx: string, dy: string, textAnchor: string, dominantBaseline: string}}\n * props to put text svg for label in correct spot. default case returns just dx and dy, without textAnchor and dominantBaseline\n * @memberof Node/helper\n */\n\n\nfunction getLabelPlacementProps(dx, labelPosition) {\n  switch (labelPosition) {\n    case \"right\":\n      return {\n        dx: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"start\"\n      };\n\n    case \"left\":\n      return {\n        dx: dx ? \"\".concat(-dx) : \"-\".concat(_node[\"default\"].NODE_LABEL_DX),\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"end\"\n      };\n\n    case \"top\":\n      return {\n        dx: \"0\",\n        dy: dx ? \"\".concat(-dx) : \"-\".concat(_node[\"default\"].NODE_LABEL_DX),\n        dominantBaseline: \"baseline\",\n        textAnchor: \"middle\"\n      };\n\n    case \"bottom\":\n      return {\n        dx: \"0\",\n        dy: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dominantBaseline: \"hanging\",\n        textAnchor: \"middle\"\n      };\n\n    case \"center\":\n      return {\n        dx: \"0\",\n        dy: \"0\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\"\n      };\n\n    default:\n      return {\n        dx: dx ? \"\".concat(dx) : _node[\"default\"].NODE_LABEL_DX,\n        dy: _node[\"default\"].NODE_LABEL_DY\n      };\n  }\n}\n\nvar _default = {\n  buildSvgSymbol: buildSvgSymbol,\n  getLabelPlacementProps: getLabelPlacementProps\n};\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
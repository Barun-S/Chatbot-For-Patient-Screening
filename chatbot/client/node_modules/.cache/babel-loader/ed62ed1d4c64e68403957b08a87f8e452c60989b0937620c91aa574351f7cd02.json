{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs3/core-js-stable/date/now\";\nimport { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\nimport debounceFn from './debounce';\nvar EventSpy = function EventSpy(_ref) {\n  var debounce = _ref.debounce,\n    name = _ref.name,\n    onEvent = _ref.onEvent,\n    target = _ref.target;\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  var onEventRef = useRef();\n  onEventRef.current = onEvent;\n  var debouncer = useMemo(function () {\n    return debounceFn(function (event) {\n      var current = onEventRef.current;\n      current && current(event);\n    }, debounce);\n  }, [debounce, onEventRef]);\n  var handleEvent = useCallback(function (event) {\n    event.timeStampLow = _Date$now();\n    debouncer(event);\n  }, [debouncer]);\n  useLayoutEffect(function () {\n    target.addEventListener(name, handleEvent, {\n      passive: true\n    });\n    handleEvent({\n      target: target,\n      type: name\n    });\n    return function () {\n      return target.removeEventListener(name, handleEvent);\n    };\n  }, [name, handleEvent, target]);\n  return false;\n};\nEventSpy.defaultProps = {\n  debounce: 200\n};\nexport default EventSpy;","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,OAA9D;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyC;EAAA,IAAtCC,QAAsC,QAAtCA,QAAsC;IAA5BC,IAA4B,QAA5BA,IAA4B;IAAtBC,OAAsB,QAAtBA,OAAsB;IAAbC,MAAa,QAAbA,MAAa;EACxD;EACA;EACA,IAAMC,UAAU,GAAGP,MAAM,EAAzB;EAEAO,UAAU,CAACC,OAAX,GAAqBH,OAArB;EAEA,IAAMI,SAAS,GAAGV,OAAO,CACvB;IAAA,OACEE,UAAU,CAAC,eAAK,EAAI;MAClB,IAAQO,OAAR,GAAoBD,UAApB,CAAQC,OAAR;MAEAA,OAAO,IAAIA,OAAO,CAACE,KAAD,CAAlB;IACD,CAJS,EAIPP,QAJO,CADZ;EAAA,CADuB,EAOvB,CAACA,QAAD,EAAWI,UAAX,CAPuB,CAAzB;EAUA,IAAMI,WAAW,GAAGd,WAAW,CAC7B,eAAK,EAAI;IACPa,KAAK,CAACE,YAAN,GAAqBC,WAArB;IAEAJ,SAAS,CAACC,KAAD,CAAT;EACD,CAL4B,EAM7B,CAACD,SAAD,CAN6B,CAA/B;EASAX,eAAe,CAAC,YAAM;IACpBQ,MAAM,CAACQ,gBAAP,CAAwBV,IAAxB,EAA8BO,WAA9B,EAA2C;MAAEI,OAAO,EAAE;IAAX,CAA3C;IACAJ,WAAW,CAAC;MAAEL,MAAM,EAANA,MAAF;MAAUU,IAAI,EAAEZ;IAAhB,CAAD,CAAX;IAEA,OAAO;MAAA,OAAME,MAAM,CAACW,mBAAP,CAA2Bb,IAA3B,EAAiCO,WAAjC,CAAN;IAAA,CAAP;EACD,CALc,EAKZ,CAACP,IAAD,EAAOO,WAAP,EAAoBL,MAApB,CALY,CAAf;EAOA,OAAO,KAAP;AACD,CAlCD;AAoCAJ,QAAQ,CAACgB,YAAT,GAAwB;EACtBf,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAeD,QAAf","names":["useCallback","useLayoutEffect","useMemo","useRef","debounceFn","EventSpy","debounce","name","onEvent","target","onEventRef","current","debouncer","event","handleEvent","timeStampLow","_Date$now","addEventListener","passive","type","removeEventListener","defaultProps"],"sources":["C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\node_modules\\react-scroll-to-bottom\\src\\EventSpy.js"],"sourcesContent":["import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
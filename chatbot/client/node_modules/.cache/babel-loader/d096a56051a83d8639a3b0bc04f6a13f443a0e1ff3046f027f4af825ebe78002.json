{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\graph.js\";\nimport React from 'react';\nimport { Graph } from 'react-d3-graph';\nimport './graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SymptomGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      symptom,\n      questions\n    } = this.props.data;\n    const nodes = [{\n      id: symptom,\n      color: 'lightblue'\n    }];\n    const links = [];\n    const createNode = (question, parent) => {\n      nodes.push({\n        id: question.ques\n      });\n      if (question.condition) {\n        const yesLinks = question.condition.yes.map(nestedQuestion => {\n          const nestedNode = createNode(nestedQuestion, question.ques);\n          return {\n            source: question.ques,\n            target: nestedNode.id,\n            label: 'yes'\n          };\n        });\n        links.push(...yesLinks);\n        const noLinks = question.condition.no.map(nestedQuestion => {\n          const nestedNode = createNode(nestedQuestion, question.ques);\n          return {\n            source: question.ques,\n            target: nestedNode.id,\n            label: 'no'\n          };\n        });\n        links.push(...noLinks);\n      }\n      if (parent) {\n        links.push({\n          source: parent,\n          target: question.ques\n        });\n      }\n      return {\n        id: question.ques\n      };\n    };\n    questions.forEach(question => {\n      createNode(question);\n    });\n    this.state = {\n      data: {\n        nodes,\n        links\n      }\n    };\n  }\n  render() {\n    const {\n      data\n    } = this.state;\n    const myConfig = {\n      directed: true,\n      nodeHighlightBehavior: true,\n      node: {\n        color: 'lightgreen',\n        size: 120,\n        highlightStrokeColor: 'blue'\n      },\n      link: {\n        highlightColor: 'lightblue',\n        fontSize: 14\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Graph, {\n      id: \"symptom-graph\",\n      data: data,\n      config: myConfig,\n      onClickNode: id => console.log(`Clicked node ${id}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SymptomGraph;","map":{"version":3,"names":["React","Graph","SymptomGraph","Component","constructor","props","symptom","questions","data","nodes","id","color","links","createNode","question","parent","push","ques","condition","yesLinks","yes","map","nestedQuestion","nestedNode","source","target","label","noLinks","no","forEach","state","render","myConfig","directed","nodeHighlightBehavior","node","size","highlightStrokeColor","link","highlightColor","fontSize","console","log"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/graph.js"],"sourcesContent":["import React from 'react';\r\nimport { Graph } from 'react-d3-graph';\r\nimport './graph.css';\r\n\r\nclass SymptomGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { symptom, questions } = this.props.data;\r\n\r\n    const nodes = [{ id: symptom, color: 'lightblue' }];\r\n\r\n    const links = [];\r\n\r\n    const createNode = (question, parent) => {\r\n      nodes.push({ id: question.ques });\r\n\r\n      if (question.condition) {\r\n        const yesLinks = question.condition.yes.map((nestedQuestion) => {\r\n          const nestedNode = createNode(nestedQuestion, question.ques);\r\n          return { source: question.ques, target: nestedNode.id, label: 'yes' };\r\n        });\r\n        links.push(...yesLinks);\r\n\r\n        const noLinks = question.condition.no.map((nestedQuestion) => {\r\n          const nestedNode = createNode(nestedQuestion, question.ques);\r\n          return { source: question.ques, target: nestedNode.id, label: 'no' };\r\n        });\r\n        links.push(...noLinks);\r\n      }\r\n\r\n      if (parent) {\r\n        links.push({ source: parent, target: question.ques });\r\n      }\r\n\r\n      return { id: question.ques };\r\n    };\r\n\r\n    questions.forEach((question) => {\r\n      createNode(question);\r\n    });\r\n\r\n    this.state = {\r\n      data: { nodes, links },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    const myConfig = {\r\n      directed: true,\r\n      nodeHighlightBehavior: true,\r\n      node: {\r\n        color: 'lightgreen',\r\n        size: 120,\r\n        highlightStrokeColor: 'blue',\r\n      },\r\n      link: {\r\n        highlightColor: 'lightblue',\r\n        fontSize: 14,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Graph\r\n        id=\"symptom-graph\"\r\n        data={data}\r\n        config={myConfig}\r\n        onClickNode={(id) => console.log(`Clicked node ${id}`)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymptomGraph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,aAAa;AAAC;AAErB,MAAMC,YAAY,SAASF,KAAK,CAACG,SAAS,CAAC;EACzCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,MAAM;MAAEC,OAAO;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI;IAE9C,MAAMC,KAAK,GAAG,CAAC;MAAEC,EAAE,EAAEJ,OAAO;MAAEK,KAAK,EAAE;IAAY,CAAC,CAAC;IAEnD,MAAMC,KAAK,GAAG,EAAE;IAEhB,MAAMC,UAAU,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;MACvCN,KAAK,CAACO,IAAI,CAAC;QAAEN,EAAE,EAAEI,QAAQ,CAACG;MAAK,CAAC,CAAC;MAEjC,IAAIH,QAAQ,CAACI,SAAS,EAAE;QACtB,MAAMC,QAAQ,GAAGL,QAAQ,CAACI,SAAS,CAACE,GAAG,CAACC,GAAG,CAAEC,cAAc,IAAK;UAC9D,MAAMC,UAAU,GAAGV,UAAU,CAACS,cAAc,EAAER,QAAQ,CAACG,IAAI,CAAC;UAC5D,OAAO;YAAEO,MAAM,EAAEV,QAAQ,CAACG,IAAI;YAAEQ,MAAM,EAAEF,UAAU,CAACb,EAAE;YAAEgB,KAAK,EAAE;UAAM,CAAC;QACvE,CAAC,CAAC;QACFd,KAAK,CAACI,IAAI,CAAC,GAAGG,QAAQ,CAAC;QAEvB,MAAMQ,OAAO,GAAGb,QAAQ,CAACI,SAAS,CAACU,EAAE,CAACP,GAAG,CAAEC,cAAc,IAAK;UAC5D,MAAMC,UAAU,GAAGV,UAAU,CAACS,cAAc,EAAER,QAAQ,CAACG,IAAI,CAAC;UAC5D,OAAO;YAAEO,MAAM,EAAEV,QAAQ,CAACG,IAAI;YAAEQ,MAAM,EAAEF,UAAU,CAACb,EAAE;YAAEgB,KAAK,EAAE;UAAK,CAAC;QACtE,CAAC,CAAC;QACFd,KAAK,CAACI,IAAI,CAAC,GAAGW,OAAO,CAAC;MACxB;MAEA,IAAIZ,MAAM,EAAE;QACVH,KAAK,CAACI,IAAI,CAAC;UAAEQ,MAAM,EAAET,MAAM;UAAEU,MAAM,EAAEX,QAAQ,CAACG;QAAK,CAAC,CAAC;MACvD;MAEA,OAAO;QAAEP,EAAE,EAAEI,QAAQ,CAACG;MAAK,CAAC;IAC9B,CAAC;IAEDV,SAAS,CAACsB,OAAO,CAAEf,QAAQ,IAAK;MAC9BD,UAAU,CAACC,QAAQ,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,CAACgB,KAAK,GAAG;MACXtB,IAAI,EAAE;QAAEC,KAAK;QAAEG;MAAM;IACvB,CAAC;EACH;EAEAmB,MAAM,GAAG;IACP,MAAM;MAAEvB;IAAK,CAAC,GAAG,IAAI,CAACsB,KAAK;IAE3B,MAAME,QAAQ,GAAG;MACfC,QAAQ,EAAE,IAAI;MACdC,qBAAqB,EAAE,IAAI;MAC3BC,IAAI,EAAE;QACJxB,KAAK,EAAE,YAAY;QACnByB,IAAI,EAAE,GAAG;QACTC,oBAAoB,EAAE;MACxB,CAAC;MACDC,IAAI,EAAE;QACJC,cAAc,EAAE,WAAW;QAC3BC,QAAQ,EAAE;MACZ;IACF,CAAC;IAED,oBACE,QAAC,KAAK;MACJ,EAAE,EAAC,eAAe;MAClB,IAAI,EAAEhC,IAAK;MACX,MAAM,EAAEwB,QAAS;MACjB,WAAW,EAAGtB,EAAE,IAAK+B,OAAO,CAACC,GAAG,CAAE,gBAAehC,EAAG,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACvD;EAEN;AACF;AAEA,eAAeR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ?\n      // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList);\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _ref = offset || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n      var _ref3 = targetOffset || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _ref4[0],\n        targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n        _ref4$2 = _ref4[1],\n        targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY;\n\n      // Points\n      var _ref5 = placementInfo.points || [],\n        _ref6 = _slicedToArray(_ref5, 2),\n        popupPoint = _ref6[0],\n        targetPoint = _ref6[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > visibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < visibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > visibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < visibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","splitPoints","points","arguments","length","undefined","getAlignPoint","rect","topBottom","leftRight","x","y","height","width","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","offsetX","offsetY","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","prevFlipRef","resetFlipCache","current","onAlign","popupElement","originLeft","style","left","originTop","top","doc","ownerDocument","win","placementInfo","targetRect","Array","isArray","getBoundingClientRect","popupRect","_win$getComputedStyle","getComputedStyle","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","popupHeight","popupWidth","targetHeight","targetWidth","visibleArea","htmlRegion","right","bottom","_scaleX","Math","round","parseFloat","_scaleY","offset","targetOffset","_ref","_ref2","_ref2$","popupOffsetX","_ref2$2","popupOffsetY","_ref3","_ref4","_ref4$","targetOffsetX","_ref4$2","targetOffsetY","_ref5","_ref6","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","nextOffsetX","nextOffsetY","getIntersectionVisibleArea","visibleL","max","visibleT","visibleR","min","visibleB","originIntersectionVisibleArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","overflow","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","nextPopupY","nextPopupBottom","nextPopupX","nextPopupRight","syncNextPopupPosition","needAdjustY","sameTB","bt","tmpNextOffsetY","tb","_tmpNextOffsetY","needAdjustX","sameLR","rl","tmpNextOffsetX","lr","_tmpNextOffsetX","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","triggerAlign","id","Promise","resolve","then","resetReady","ori"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ?\n      // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList);\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _ref = offset || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n      var _ref3 = targetOffset || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _ref4[0],\n        targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n        _ref4$2 = _ref4[1],\n        targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY;\n\n      // Points\n      var _ref5 = placementInfo.points || [],\n        _ref6 = _slicedToArray(_ref5, 2),\n        popupPoint = _ref6[0],\n        targetPoint = _ref6[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > visibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < visibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > visibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < visibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
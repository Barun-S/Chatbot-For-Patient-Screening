{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5001/addflowapi\";\n\n// function QuestionForm() {\n//   const [topic, setTopic] = useState(\"\");\n//   const [questions, setQuestions] = useState([\n//     { question: \"\", nestedQuestions: [] }\n//   ]);\n\n//   const handleChange = (e, index, nestedIndex) => {\n//     const { name, value } = e.target;\n//     if (nestedIndex !== undefined) {\n//       const nestedQuestions = [...questions[index].nestedQuestions];\n//       nestedQuestions[nestedIndex][name] = value;\n//       setQuestions([\n//         ...questions.slice(0, index),\n//         { ...questions[index], nestedQuestions },\n//         ...questions.slice(index + 1)\n//       ]);\n//     } else {\n//       setQuestions([\n//         ...questions.slice(0, index),\n//         { ...questions[index], [name]: value },\n//         ...questions.slice(index + 1)\n//       ]);\n//     }\n//   };\n\n//   const handleAddQuestion = () => {\n//     setQuestions([...questions, { question: \"\", nestedQuestions: [] }]);\n//   };\n\n//   const handleSubmit = async () => {\n//     const data = {\n//       topic,\n//       questions\n//     };\n//     try {\n//       const response = await axios.post(API_URL, data);\n//       console.log(response);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"question-form-container\">\n//       <h1>Question Form</h1>\n//       <div className=\"form\">\n//         <label>\n//           Topic:\n//           <input type=\"text\" value={topic} name=\"topic\" onChange={(e) => setTopic(e.target.value)} />\n//         </label>\n//         {questions.map((q, i) => (\n//           <div key={i}>\n//             <label>\n//               Question {i + 1}:\n//               <input\n//                 type=\"text\"\n//                 value={q.question}\n//                 name=\"question\"\n//                 onChange={(e) => handleChange(e, i)}\n//               />\n//             </label>\n//             <br />\n//             {q.nestedQuestions.map((nq, j) => (\n//               <div key={j}>\n//                 <label>\n//                   Nested Question {j + 1}:\n//                   <input\n//                     type=\"text\"\n//                     value={nq.nestedQuestion}\n//                     name=\"nestedQuestion\"\n//                     onChange={(e) => handleChange(e, i, j)}\n//                   />\n//                 </label>\n//                 <br />\n//               </div>\n//             ))}\n//             <button onClick={() => handleChange({ target: { name: \"nestedQuestions\", value: [...q.nestedQuestions, { nestedQuestion: \"\" }] } }, i)}>Add Nested Question</button>\n//           </div>\n//         ))}\n//         <button onClick={handleAddQuestion}>Add Question</button>\n//         <br />\n//         <button onClick={handleSubmit}>Submit</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default QuestionForm;","map":{"version":3,"names":["API_URL"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/addflow.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5001/addflowapi\";\r\n\r\n// function QuestionForm() {\r\n//   const [topic, setTopic] = useState(\"\");\r\n//   const [questions, setQuestions] = useState([\r\n//     { question: \"\", nestedQuestions: [] }\r\n//   ]);\r\n\r\n//   const handleChange = (e, index, nestedIndex) => {\r\n//     const { name, value } = e.target;\r\n//     if (nestedIndex !== undefined) {\r\n//       const nestedQuestions = [...questions[index].nestedQuestions];\r\n//       nestedQuestions[nestedIndex][name] = value;\r\n//       setQuestions([\r\n//         ...questions.slice(0, index),\r\n//         { ...questions[index], nestedQuestions },\r\n//         ...questions.slice(index + 1)\r\n//       ]);\r\n//     } else {\r\n//       setQuestions([\r\n//         ...questions.slice(0, index),\r\n//         { ...questions[index], [name]: value },\r\n//         ...questions.slice(index + 1)\r\n//       ]);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddQuestion = () => {\r\n//     setQuestions([...questions, { question: \"\", nestedQuestions: [] }]);\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     const data = {\r\n//       topic,\r\n//       questions\r\n//     };\r\n//     try {\r\n//       const response = await axios.post(API_URL, data);\r\n//       console.log(response);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"question-form-container\">\r\n//       <h1>Question Form</h1>\r\n//       <div className=\"form\">\r\n//         <label>\r\n//           Topic:\r\n//           <input type=\"text\" value={topic} name=\"topic\" onChange={(e) => setTopic(e.target.value)} />\r\n//         </label>\r\n//         {questions.map((q, i) => (\r\n//           <div key={i}>\r\n//             <label>\r\n//               Question {i + 1}:\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={q.question}\r\n//                 name=\"question\"\r\n//                 onChange={(e) => handleChange(e, i)}\r\n//               />\r\n//             </label>\r\n//             <br />\r\n//             {q.nestedQuestions.map((nq, j) => (\r\n//               <div key={j}>\r\n//                 <label>\r\n//                   Nested Question {j + 1}:\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={nq.nestedQuestion}\r\n//                     name=\"nestedQuestion\"\r\n//                     onChange={(e) => handleChange(e, i, j)}\r\n//                   />\r\n//                 </label>\r\n//                 <br />\r\n//               </div>\r\n//             ))}\r\n//             <button onClick={() => handleChange({ target: { name: \"nestedQuestions\", value: [...q.nestedQuestions, { nestedQuestion: \"\" }] } }, i)}>Add Nested Question</button>\r\n//           </div>\r\n//         ))}\r\n//         <button onClick={handleAddQuestion}>Add Question</button>\r\n//         <br />\r\n//         <button onClick={handleSubmit}>Submit</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default QuestionForm;\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,OAAO,GAAG,kCAAkC;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
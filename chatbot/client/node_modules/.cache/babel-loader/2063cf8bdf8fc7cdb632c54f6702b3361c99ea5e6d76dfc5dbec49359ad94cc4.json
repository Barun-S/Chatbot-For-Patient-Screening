{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\flowtree.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './flowtree.css';\nconst API_URL = \"http://localhost:5001/fetchalldata\";\nimport './TreeView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeView = _ref => {\n  _s();\n  let {\n    apiUrl\n  } = _ref;\n  const [data, setData] = useState(null);\n  const [expandedBranches, setExpandedBranches] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(apiUrl);\n      const jsonData = await response.json();\n      setData(jsonData);\n    };\n    fetchData();\n  }, [apiUrl]);\n  const handleToggleExpand = key => {\n    setExpandedBranches(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n  };\n  const renderTreeNode = function (node, key) {\n    let isChildNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const hasChildren = typeof node === 'object' && node !== null && Object.keys(node).length > 0;\n    const isExpanded = expandedBranches[key];\n    if (!hasChildren) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node value\",\n          children: [key, \": \", JSON.stringify(node)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `node ${isChildNode ? 'child-node' : 'parent-node'}`,\n        children: [!isChildNode && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `expand-button ${isExpanded ? 'expanded' : ''}`,\n          onClick: () => handleToggleExpand(key),\n          children: isExpanded ? '-' : '+'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this), isChildNode ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node-icon\",\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, _this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node key\",\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), typeof node === 'object' ? '{' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), isExpanded && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(node).map(_ref2 => {\n          let [childKey, childNode] = _ref2;\n          return renderTreeNode(childNode, childKey, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `node ${isChildNode ? 'child-node' : 'parent-node'}`,\n        children: typeof node === 'object' ? '}' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"tree-view\",\n    children: data && renderTreeNode(data, 'root')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeView, \"CIefeKAjUpigyHY0gU6BZRqJOGk=\");\n_c = TreeView;\nexport default TreeView;\nvar _c;\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"names":["React","useState","useEffect","API_URL","TreeView","apiUrl","data","setData","expandedBranches","setExpandedBranches","fetchData","response","fetch","jsonData","json","handleToggleExpand","key","prevState","renderTreeNode","node","isChildNode","hasChildren","Object","keys","length","isExpanded","JSON","stringify","entries","map","childKey","childNode"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/flowtree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './flowtree.css';\r\nconst API_URL = \"http://localhost:5001/fetchalldata\";\r\n\r\n\r\nimport './TreeView.css';\r\n\r\nconst TreeView = ({ apiUrl }) => {\r\n  const [data, setData] = useState(null);\r\n  const [expandedBranches, setExpandedBranches] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(apiUrl);\r\n      const jsonData = await response.json();\r\n      setData(jsonData);\r\n    };\r\n    fetchData();\r\n  }, [apiUrl]);\r\n\r\n  const handleToggleExpand = (key) => {\r\n    setExpandedBranches((prevState) => ({\r\n      ...prevState,\r\n      [key]: !prevState[key],\r\n    }));\r\n  };\r\n\r\n  const renderTreeNode = (node, key, isChildNode = false) => {\r\n    const hasChildren = typeof node === 'object' && node !== null && Object.keys(node).length > 0;\r\n    const isExpanded = expandedBranches[key];\r\n\r\n    if (!hasChildren) {\r\n      return (\r\n        <li key={key}>\r\n          <div className=\"node value\">{key}: {JSON.stringify(node)}</div>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <li key={key}>\r\n        <div className={`node ${isChildNode ? 'child-node' : 'parent-node'}`}>\r\n          {!isChildNode && (\r\n            <button className={`expand-button ${isExpanded ? 'expanded' : ''}`} onClick={() => handleToggleExpand(key)}>{isExpanded ? '-' : '+'}</button>\r\n          )}\r\n          {isChildNode ? <span className=\"node-icon\">â€¢</span> : null}\r\n          <span className=\"node key\">{key}:</span>\r\n          {typeof node === 'object' ? '{' : ''}\r\n        </div>\r\n        {isExpanded && (\r\n          <ul>\r\n            {Object.entries(node).map(([childKey, childNode]) =>\r\n              renderTreeNode(childNode, childKey, true)\r\n            )}\r\n          </ul>\r\n        )}\r\n        <div className={`node ${isChildNode ? 'child-node' : 'parent-node'}`}>\r\n          {typeof node === 'object' ? '}' : ''}\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className=\"tree-view\">\r\n      {data && renderTreeNode(data, 'root')}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
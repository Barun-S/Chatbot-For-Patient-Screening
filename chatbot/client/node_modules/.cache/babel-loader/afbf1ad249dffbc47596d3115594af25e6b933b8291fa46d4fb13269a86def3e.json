{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\flowtree.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001/fetchalldata\";\nconst Tree = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(data => setData(data));\n  }, []);\n  const renderTree = nodes => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [node.name, node.children && renderTree(node.children)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length > 0 ? renderTree(data) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useState","useEffect","API_URL","Tree","data","setData","fetch","then","response","json","renderTree","nodes","map","node","name","children","id","length"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/flowtree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_URL = \"http://localhost:5001/fetchalldata\";\r\n\r\nconst Tree = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n      .then(response => response.json())\r\n      .then(data => setData(data));\r\n  }, []);\r\n\r\n  const renderTree = (nodes) => {\r\n    return (\r\n      <ul>\r\n        {nodes.map(node => (\r\n          <li key={node.id}>\r\n            {node.name}\r\n            {node.children && renderTree(node.children)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {data.length > 0 ? renderTree(data) : <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdK,KAAK,CAACJ,OAAO,CAAC,CACXK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAIC,KAAK,IAAK;IAC5B,oBACE;MAAA,UACGA,KAAK,CAACC,GAAG,CAACC,IAAI,iBACb;QAAA,WACGA,IAAI,CAACC,IAAI,EACTD,IAAI,CAACE,QAAQ,IAAIL,UAAU,CAACG,IAAI,CAACE,QAAQ,CAAC;MAAA,GAFpCF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAIjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAET,CAAC;EAED,oBACE;IAAA,UACGZ,IAAI,CAACa,MAAM,GAAG,CAAC,GAAGP,UAAU,CAACN,IAAI,CAAC,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QACnD;AAEV,CAAC;AAAC,GA3BID,IAAI;AAAA,KAAJA,IAAI;AA6BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
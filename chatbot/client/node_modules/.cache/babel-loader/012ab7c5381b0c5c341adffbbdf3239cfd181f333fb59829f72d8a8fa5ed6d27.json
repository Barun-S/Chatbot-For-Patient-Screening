{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    controlInteractiveSize: checkboxSize,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  // Ref: https://github.com/ant-design/ant-design/issues/41564\n  const checkBoxOffset = token.lineHeight * token.fontSize / 2 - checkboxSize / 2;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2 - checkBoxOffset;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});","map":{"version":3,"names":["Keyframes","genCollapseMotion","getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genFocusOutline","resetComponent","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","controlInteractiveSize","checkboxSize","treeNodePadding","treeTitleHeight","checkBoxOffset","lineHeight","treeCheckBoxMarginVertical","fontSizeLG","treeCheckBoxMarginHorizontal","paddingXS","Object","assign","background","colorBgContainer","transform","alignItems","flex","insetInlineEnd","bottom","animationName","animationDuration","animationPlayState","animationFillMode","padding","outline","direction","color","colorTextDisabled","cursor","fontWeight","flexShrink","textAlign","visibility","alignSelf","whiteSpace","userSelect","margin","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","marginInlineEnd","marginBlockStart","minHeight","motionDurationMid","controlItemBgHover","controlItemBgActive","boxShadow","genDirectoryStyle","colorTextLightSolid","genTreeStyle","controlHeightSM","treeToken","_ref","componentCls"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/node_modules/antd/es/tree/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    controlInteractiveSize: checkboxSize,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  // Ref: https://github.com/ant-design/ant-design/issues/41564\n  const checkBoxOffset = token.lineHeight * token.fontSize / 2 - checkboxSize / 2;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2 - checkBoxOffset;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barun\\\\OneDrive\\\\Documents\\\\btp\\\\chatbot\\\\client\\\\src\\\\addflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './addflow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionAnswerForm() {\n  _s();\n  const [topic, setTopic] = useState(\"\");\n  const [questions, setQuestions] = useState([{\n    question: \"\",\n    answer: \"\",\n    nestedQuestions: []\n  }]);\n  const handleTopicChange = e => {\n    setTopic(e.target.value);\n  };\n  const handleQuestionChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newQuestions = [...questions];\n    newQuestions[index][name] = value;\n    setQuestions(newQuestions);\n  };\n  const handleNestedQuestionChange = (e, questionIndex, nestedQuestionIndex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newQuestions = [...questions];\n    newQuestions[questionIndex].nestedQuestions[nestedQuestionIndex][name] = value;\n    setQuestions(newQuestions);\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      question: \"\",\n      answer: \"\",\n      nestedQuestions: []\n    }]);\n  };\n  const addNestedQuestion = index => {\n    const newQuestions = [...questions];\n    newQuestions[index].nestedQuestions.push({\n      question: \"\",\n      answer: \"\"\n    });\n    setQuestions(newQuestions);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = {\n      topic,\n      questions\n    };\n    axios.post(\"https://example.com/api\", formData).then(response => console.log(response.data)).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"topic\",\n          className: \"label\",\n          children: \"Topic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"topic\",\n          name: \"topic\",\n          value: topic,\n          onChange: handleTopicChange,\n          className: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qaContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question${questionIndex}`,\n            className: \"label\",\n            children: [\"Question \", questionIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `question${questionIndex}`,\n            name: \"question\",\n            value: question.question,\n            onChange: e => handleQuestionChange(e, questionIndex),\n            className: \"inputField\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `answer${questionIndex}`,\n            className: \"label\",\n            children: [\"Answer \", questionIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `answer${questionIndex}`,\n            name: \"answer\",\n            value: question.answer,\n            onChange: e => handleQuestionChange(e, questionIndex),\n            className: \"inputField\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => addNestedQuestion(questionIndex),\n          children: \"Add Nested Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), question.nestedQuestions.map((nestedQuestion, nestedQuestionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nestedQAContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nestedQuestion\",\n              className: \"label\",\n              children: \"Nested Question:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"nestedQuestion\",\n              name: \"question\",\n              value: nestedQuestion.question,\n              onChange: e => handleNestedQuestionChange(e, questionIndex, nestedQuestionIndex),\n              className: \"inputField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nestedAnswer\",\n              className: \"label\",\n              children: \"Nested Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"nestedAnswer\",\n              name: \"answer\",\n              value: nestedQuestion.answer,\n              onChange: e => handleNestedQuestionChange(e, questionIndex, nestedQuestionIndex),\n              className: \"inputField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, nestedQuestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))]\n      }, questionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionAnswerForm, \"wUcCwm2r4fxwhzR6420ZhJcJfas=\");\n_c = QuestionAnswerForm;\nexport default QuestionAnswerForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionAnswerForm\");","map":{"version":3,"names":["React","useState","axios","QuestionAnswerForm","topic","setTopic","questions","setQuestions","question","answer","nestedQuestions","handleTopicChange","e","target","value","handleQuestionChange","index","name","newQuestions","handleNestedQuestionChange","questionIndex","nestedQuestionIndex","addQuestion","addNestedQuestion","push","handleSubmit","preventDefault","formData","post","then","response","console","log","data","catch","error","map","nestedQuestion"],"sources":["C:/Users/barun/OneDrive/Documents/btp/chatbot/client/src/addflow.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './addflow.css';\r\n\r\nfunction QuestionAnswerForm() {\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [questions, setQuestions] = useState([{ question: \"\", answer: \"\", nestedQuestions: [] }]);\r\n\r\n  const handleTopicChange = (e) => {\r\n    setTopic(e.target.value);\r\n  };\r\n\r\n  const handleQuestionChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const newQuestions = [...questions];\r\n    newQuestions[index][name] = value;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleNestedQuestionChange = (e, questionIndex, nestedQuestionIndex) => {\r\n    const { name, value } = e.target;\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].nestedQuestions[nestedQuestionIndex][name] = value;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setQuestions([...questions, { question: \"\", answer: \"\", nestedQuestions: [] }]);\r\n  };\r\n\r\n  const addNestedQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].nestedQuestions.push({ question: \"\", answer: \"\" });\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = { topic, questions };\r\n    axios\r\n      .post(\"https://example.com/api\", formData)\r\n      .then((response) => console.log(response.data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"inputContainer\">\r\n          <label htmlFor=\"topic\" className=\"label\">\r\n            Topic:\r\n          </label>\r\n          <input type=\"text\" id=\"topic\" name=\"topic\" value={topic} onChange={handleTopicChange} className=\"inputField\" />\r\n        </div>\r\n\r\n        {questions.map((question, questionIndex) => (\r\n          <div key={questionIndex} className=\"qaContainer\">\r\n            <div className=\"inputContainer\">\r\n              <label htmlFor={`question${questionIndex}`} className=\"label\">\r\n                Question {questionIndex + 1}:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id={`question${questionIndex}`}\r\n                name=\"question\"\r\n                value={question.question}\r\n                onChange={(e) => handleQuestionChange(e, questionIndex)}\r\n                className=\"inputField\"\r\n              />\r\n            </div>\r\n            <div className=\"inputContainer\">\r\n              <label htmlFor={`answer${questionIndex}`} className=\"label\">\r\n                Answer {questionIndex + 1}:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id={`answer${questionIndex}`}\r\n                name=\"answer\"\r\n                value={question.answer}\r\n                onChange={(e) => handleQuestionChange(e, questionIndex)}\r\n                className=\"inputField\"\r\n              />\r\n            </div>\r\n            <button type=\"button\" onClick={() => addNestedQuestion(questionIndex)}>\r\n              Add Nested Question\r\n            </button>\r\n            {question.nestedQuestions.map((nestedQuestion, nestedQuestionIndex) => (\r\n              <div key={nestedQuestionIndex} className=\"nestedQAContainer\">\r\n                <div className=\"inputContainer\">\r\n                  <label htmlFor=\"nestedQuestion\" className=\"label\">\r\n                    Nested Question:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"nestedQuestion\"\r\n                    name=\"question\"\r\n                    value={nestedQuestion.question}\r\n                    onChange={(e) => handleNestedQuestionChange(e, questionIndex, nestedQuestionIndex)}\r\n                    className=\"inputField\"\r\n                  />\r\n            </div>\r\n            <div className=\"inputContainer\">\r\n              <label htmlFor=\"nestedAnswer\" className=\"label\">\r\n                Nested Answer:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nestedAnswer\"\r\n                name=\"answer\"\r\n                value={nestedQuestion.answer}\r\n                onChange={(e) => handleNestedQuestionChange(e, questionIndex, nestedQuestionIndex)}\r\n                className=\"inputField\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ))}\r\n\r\n    <button type=\"button\" onClick={addQuestion}>\r\n      Add Question\r\n    </button>\r\n\r\n    <button type=\"submit\">Submit</button>\r\n  </form>\r\n</div>\r\n);\r\n}\r\n\r\nexport default QuestionAnswerForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
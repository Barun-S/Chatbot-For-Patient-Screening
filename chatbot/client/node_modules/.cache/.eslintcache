[{"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\index.js":"1","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\reportWebVitals.js":"2","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\App.js":"3","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\canvasviewer.js":"4","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\pc.js":"5","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\listpatient.js":"6","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\error-page.jsx":"7","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\canvas.js":"8","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\chat.js":"9","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\test.js":"10","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\addflow.js":"11","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\header.js":"12","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\flowtree.js":"13","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graph.js":"14","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fever.js":"15","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fever_elements.js":"16","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\ReactFlowRenderer.js":"17","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\cough_elements.js":"18","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\headache_elements.js":"19","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\vomiting_elements.js":"20","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\general_elements.js":"21","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\stomachache_elements.js":"22","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\sorethroat_elements.js":"23","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\rashes_elements.js":"24","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\chestpain_elements.js":"25","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fatigue_elements.js":"26","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\weightgain_elements.js":"27","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\weightloss_elements.js":"28","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\memoryloss_elements.js":"29"},{"size":8582,"mtime":1683102425189,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1672849964000,"results":"32","hashOfConfig":"31"},{"size":1153,"mtime":1683104959460,"results":"33","hashOfConfig":"31"},{"size":4611,"mtime":1673077915000,"results":"34","hashOfConfig":"31"},{"size":1097,"mtime":1673253620000,"results":"35","hashOfConfig":"31"},{"size":1934,"mtime":1673081208000,"results":"36","hashOfConfig":"31"},{"size":349,"mtime":1673014605000,"results":"37","hashOfConfig":"31"},{"size":6667,"mtime":1673079374000,"results":"38","hashOfConfig":"31"},{"size":2791,"mtime":1673080307000,"results":"39","hashOfConfig":"31"},{"size":3556,"mtime":1673007481000,"results":"40","hashOfConfig":"31"},{"size":6678,"mtime":1682350222139,"results":"41","hashOfConfig":"31"},{"size":424,"mtime":1682351382269,"results":"42","hashOfConfig":"31"},{"size":9758,"mtime":1683084322279,"results":"43","hashOfConfig":"31"},{"size":3127,"mtime":1683022295119,"results":"44","hashOfConfig":"31"},{"size":8136,"mtime":1682841667736,"results":"45","hashOfConfig":"31"},{"size":5039,"mtime":1682927392322,"results":"46","hashOfConfig":"31"},{"size":2741,"mtime":1682927520250,"results":"47","hashOfConfig":"31"},{"size":3549,"mtime":1682860053704,"results":"48","hashOfConfig":"31"},{"size":4426,"mtime":1683020394751,"results":"49","hashOfConfig":"31"},{"size":3383,"mtime":1682860599219,"results":"50","hashOfConfig":"31"},{"size":3292,"mtime":1682928278460,"results":"51","hashOfConfig":"31"},{"size":3320,"mtime":1682928674354,"results":"52","hashOfConfig":"31"},{"size":2508,"mtime":1682928967636,"results":"53","hashOfConfig":"31"},{"size":3879,"mtime":1683010017993,"results":"54","hashOfConfig":"31"},{"size":7852,"mtime":1683016550919,"results":"55","hashOfConfig":"31"},{"size":6358,"mtime":1683017842465,"results":"56","hashOfConfig":"31"},{"size":5009,"mtime":1683018668387,"results":"57","hashOfConfig":"31"},{"size":7373,"mtime":1683020398112,"results":"58","hashOfConfig":"31"},{"size":3179,"mtime":1683021797568,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1sthn3j",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\index.js",["155","156","157","158","159","160","161","162"],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\App.js",["163","164","165","166","167","168","169"],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\canvasviewer.js",["170","171","172","173","174","175","176"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Canvas from './canvas.js';\nimport './cv.css'\n\n\nfunction Canvasviewer(){\n    const front  = \"https://i.ibb.co/CzgK8VY/Screenshot-from-2023-01-07-12-33-41.png\";\n    const bottom = \"https://i.ibb.co/x2BP36x/Screenshot-from-2023-01-07-12-33-06.png\";\n    const top = \"https://i.ibb.co/6ZpGm91/Screenshot-from-2023-01-07-12-33-19.png\";\n    const right_view = \"https://i.ibb.co/jWHcz5D/Screenshot-from-2022-12-30-12-05-53.png\";\n    const left_view = \"https://i.ibb.co/nnS6pvp/Screenshot-from-2022-12-30-12-05-35.png\";\n    const back_right = \"https://i.ibb.co/W0qJf5d/Screenshot-from-2022-12-30-12-04-36.png\";\n    const back_left = \"https://i.ibb.co/CzRgt5f/Screenshot-from-2022-12-30-12-04-20.png\";\n    const back = \"https://i.ibb.co/jrHd1wk/Screenshot-from-2023-01-07-12-32-46.png\";\n    const front_left = \"https://i.ibb.co/y8VZ7nm/Screenshot-from-2023-01-07-12-32-12.png\";\n    const front_right = \"https://i.ibb.co/Njcz5gY/Screenshot-from-2023-01-07-12-32-28.png\";\n  \n    const [imgView, setImgView] = useState(front);\n    \n    const btnstyle = {\n      \"background-color\": \"e7e7e7\", /* Green */\n      \"border\": \"none\",\n      // \"color\": \"white\",\n      \"padding\": \"15px 20px\",\n      \"text-align\": \"center\",\n      \"text-decoration\": \"none\",\n      \"display\": \"inline-block\",\n      \"font-size\": \"16px\",\n      \"margin\" : \"5px\",\n      \"border-radius\" : \"5px\"\n      \n    }\n  \n    const fronthandler = () =>{\n      setImgView(front);\n      console.log(imgView);\n    }\n    const frontlefthandler = () =>{\n      setImgView(front_left);\n      console.log(imgView);\n    }\n   \n    const frontrighthandler = () =>{\n      setImgView(front_right);\n      console.log(imgView);\n    }\n   \n    const backrighthandler = () =>{\n      setImgView(back_right);\n    }\n   \n    const backlefthandler = () =>{\n      setImgView(back_left);\n    }\n   \n    const backhandler = () =>{\n      setImgView(back);\n    }\n   \n    const tophandler = () =>{\n      setImgView(top);\n    }\n   \n    const bottomhandler = () =>{\n      setImgView(bottom);\n    }\n   \n  // https://i.ibb.co/SQ1HcCW/Screenshot-from-2022-12-30-12-02-42.png  front\n  // https://i.ibb.co/G94W5Hn/Screenshot-from-2022-12-30-12-06-43.png  bottom\n  // https://i.ibb.co/2NCNryC/Screenshot-from-2022-12-30-12-06-16.png  top\n  // https://i.ibb.co/jWHcz5D/Screenshot-from-2022-12-30-12-05-53.png right view\n  // https://i.ibb.co/nnS6pvp/Screenshot-from-2022-12-30-12-05-35.png left view\n  // https://i.ibb.co/W0qJf5d/Screenshot-from-2022-12-30-12-04-36.png back right\n  // https://i.ibb.co/CzRgt5f/Screenshot-from-2022-12-30-12-04-20.png back left\n  // https://i.ibb.co/CKBDM7C/Screenshot-from-2022-12-30-12-03-48.png back \n  // https://i.ibb.co/nPFfz4y/Screenshot-from-2022-12-30-12-03-26.png front left\n  // https://i.ibb.co/smL23D3/Screenshot-from-2022-12-30-12-03-04.png front right\n\n// https://i.ibb.co/CzgK8VY/Screenshot-from-2023-01-07-12-33-41.png \n// https://i.ibb.co/6ZpGm91/Screenshot-from-2023-01-07-12-33-19.png\n// https://i.ibb.co/x2BP36x/Screenshot-from-2023-01-07-12-33-06.png\n// https://i.ibb.co/jrHd1wk/Screenshot-from-2023-01-07-12-32-46.png\n// https://i.ibb.co/Njcz5gY/Screenshot-from-2023-01-07-12-32-28.png\n// https://i.ibb.co/y8VZ7nm/Screenshot-from-2023-01-07-12-32-12.png\n   \n    return (\n      <div className=\"maincontent\" >\n        <div className='switchTab' >\n          <button onClick={fronthandler} style = {btnstyle}>front view </button>\n          <button onClick={frontlefthandler}  style = {btnstyle}>front-left view </button>\n          <button onClick={frontrighthandler}  style = {btnstyle}>front-right view </button>\n          <button onClick={backhandler}  style = {btnstyle}>back view </button>\n          <button onClick={bottomhandler}  style = {btnstyle}>bottom view </button>\n          <button onClick={tophandler}  style = {btnstyle}>top view </button>\n          {/* <button>front view </button> */}\n        </div>\n        <div className='canvas'>\n          \n          <Canvas imagesrc = {imgView}/>\n          {/* <Canvas imagesrc = \"https://i.ibb.co/nPFfz4y/Screenshot-from-2022-12-30-12-03-26.png\"/>\n          <Canvas imagesrc = \"https://i.ibb.co/smL23D3/Screenshot-from-2022-12-30-12-03-04.png\"/>\n          <Canvas imagesrc = \"https://i.ibb.co/CKBDM7C/Screenshot-from-2022-12-30-12-03-48.png\"/>\n          <Canvas imagesrc = \"https://i.ibb.co/G94W5Hn/Screenshot-from-2022-12-30-12-06-43.png\"/>\n          <Canvas imagesrc = \"https://i.ibb.co/2NCNryC/Screenshot-from-2022-12-30-12-06-16.png\"/> */}\n        </div>\n      </div>\n    );\n  }\n  \n  export default Canvasviewer;\n  ","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\pc.js",["177","178"],[],"import React , {useState, useEffect} from \"react\";\nimport { useLocation } from 'react-router-dom'\nimport './pc.css'\n\nconst Conversation = () => {\n\n   \n    const location = useLocation();\n    const {convo} = location.state;\n    console.log(convo);\n\n    return (\n        <div>\n        <div className='titlebar'> Patient Chat </div> \n        <div className=\"content1\">\n           \n            <div className=\"child\">\n            {convo.map((question) => {\n                return(\n                    <div style ={{\n                        \"margin\" : \"10px\",\n                    }}>\n                        <div style = {{\n                            \"margin\" : \"3px\",\n                            \"color\" : \"green\"\n                        }}>{question.question}</div>\n                        <div style = {{\n                            \"margin\" : \"3px\",\n                            \"color\" : \"purple\"\n                        }}>{question.response}</div>\n                    </div>\n                )\n            })}\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Conversation;","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\listpatient.js",["179","180","181"],[],"import React , {useState, useEffect} from 'react';\nimport { Outlet, Link } from \"react-router-dom\";\nimport {redirect} from \"react-router-dom\";\nimport './lpstyle.css'\n\nconst Listofpatients = () => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        console.log(\"component rendered\");\n        fetch(\"http://localhost:5001/fetchallresponses\")\n        .then((response) => response.json())\n        .then((d) => {\n            //console.log(d.data);\n            const t = [];\n            for(let i = 0; i< d.length; i++){\n                let k = {\n                    id : i,\n                    firstname : d[i].personal_info[0].response,\n                    age : d[i].personal_info[1].response, \n                    gender : d[i].personal_info[2].response,\n                    responses : d[i].questions_responses\n                }\n                t.push(k);\n            }\n            setData(t);\n        })\n        .catch((err) => (console.log(err)))\n    }, [])\n\n    const redir = () => {\n\n    }\n\n    return (\n        <div>\n            <div className='titlebar'> Patient Conversations </div>\n           {data.map((obj) => {\n            return(\n                <div className='parent'>\n                <div className='patient' id ={obj.id}>\n                    <div>\n                        <div style = {{\n                            \"fontSize\" : \"1.8em\",\n                        }}>Patient Data</div>\n                        <div><p>Name : {obj.firstname}</p></div>\n                        <div><p>Age : {obj.age}</p></div>\n                        <div><p>Gender : {obj.gender}</p></div>\n                    </div>\n                    <div>\n                        <Link to={\"/patientconvo\"} state={{ convo : obj.responses}}>view patient screening</Link>\n                    </div>\n                </div>\n                </div>\n            );\n           })}\n        </div>\n    )\n\n}\n\nexport default Listofpatients","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\error-page.jsx",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\canvas.js",["182","183","184","185","186"],[],"import React, {useEffect, useCallback, useState, useRef} from \"react\";\nimport './canvas.css'\n\nconst colors = [\n    \"red\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n  ]\n\nconst values = [\n\"pain\",\n\"itching\",\n\"rash\",\n\"burning sensation\",\n]\n\n\nconst Canvas = ({imagesrc}) => {\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n  var zoomIntensity = 0.1;\n  var scale = 1;\nvar orgnx = window.innerWidth/2;\nvar orgny = window.innerHeight/2;\nvar width = 1000;\n        var height = 900;\nvar visibleWidth = 1500;\n        var visibleHeight = 600;\n  let cameraOffset = { x: window.innerWidth/2, y: window.innerHeight/2 }\n  const [selectedColor, setSelectedColor] = useState(\"red\");\n  const [selectedVal, setSelectedVal] = useState(\"pain\");\n  const [mouseDown, setMouseDown] = useState(false);\n  const [lastPosition, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  useEffect(() => {\n\n\n\n    if (canvasRef.current) {\n      ctx.current = canvasRef.current.getContext('2d'); \n    }\n\n    function drawhere(){\n        const ct = canvasRef.current.getContext('2d');\n        var imageObj1 = new Image();\n        imageObj1.setAttribute('crossOrigin', 'anonymous');\n        imageObj1.src = `${imagesrc}` ;\n        //imageObj1.setAttribute('crossOrigin','anonymous');\n        imageObj1.onload = function() {\n            ct.drawImage(imageObj1,0,0, 550, 800);\n        }     \n    }\n    drawhere();\n\n  }, [imagesrc]);\n\n//   <a href=\"https://ibb.co/R0PNzPS\"><img src=\"https://i.ibb.co/58vkBv9/Screenshot-from-2022-12-30-12-06-43.png\" alt=\"Screenshot-from-2022-12-30-12-06-43\" border=\"0\"></a><br /><a target='_blank' href='https://usefulwebtool.com/'>keyboard fonts free</a><br />\n\n  const draw = useCallback((x, y) => {\n    if (mouseDown) {\n      ctx.current.beginPath();\n      ctx.current.strokeStyle = selectedColor;\n      ctx.current.lineWidth = 4;\n      ctx.current.lineJoin = 'round';\n      ctx.current.moveTo(lastPosition.x, lastPosition.y);\n      ctx.current.lineTo(x, y);\n      ctx.current.closePath();\n      ctx.current.stroke();\n\n      setPosition({\n        x,\n        y\n      })\n    }\n  }, [lastPosition, mouseDown, selectedColor, setPosition])\n\n  const download = async () => {\n    const image = canvasRef.current.toDataURL('image/png');\n    const blob = await (await fetch(image)).blob();\n    const blobURL = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = blobURL;\n    link.download = \"image.png\";\n    link.click();\n  }\n\n  const clear = () => {\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height);\n    var imageObj1 = new Image();\n    imageObj1.setAttribute('crossOrigin', 'anonymous');\n    imageObj1.src = `${imagesrc}` ;\n    //imageObj1.setAttribute('crossOrigin','anonymous');\n    imageObj1.onload = function() {\n        ctx.current.drawImage(imageObj1,0,0, 550, 800);\n    } \n  }\n\n//   const zoom = () => {\n//     ctx.current.scale(2,2);\n//   }\n\n//   const zoominverse= () => {\n//     ctx.current.scale(0.5,0.5);\n//   }\n\n  const onMouseDown = (e) => {\n    const boundingRect = canvasRef.current.getBoundingClientRect();\n\n    setPosition({\n      x: e.clientX - boundingRect.left,\n      y: e.clientY - boundingRect.top\n    })\n    setMouseDown(true)\n  }\n\n  const onMouseUp = (e) => {\n    setMouseDown(false)\n  }\n\n  const onMouseMove = (e) => {\n    const boundingRect = canvasRef.current.getBoundingClientRect();\n\n    draw(e.clientX - boundingRect.left,e.clientY - boundingRect.top)\n  }\n\n//   const nzoom = () => {\n//     const boundingRect = canvasRef.current.getBoundingClientRect();\n//     ctx.current.translate((boundingRect.left+boundingRect.right)/2, (boundingRect.top+boundingRect.bottom)/2); \n//     ctx.current.scale(2,2);\n//     ctx.current.translate(boundingRect.left, boundingRect.top); \n//   }\n\n  const zoom = (event) => {\n    // event.preventDefault();\n   // console.log(canvasRef.offsetLeft);\n    var x = event.clientX - canvasRef.offsetLeft;\n    var y = event.clientY - canvasRef.offsetTop;\n    var scroll = event.deltaY < 0 ? 1 : -2;\n\n    var zoom = Math.exp(scroll * zoomIntensity);\n\n    ctx.current.translate(orgnx, orgny);\n    console.log(\"here\");\n    orgnx -= x / (scale * zoom) - x / scale;\n    orgny -= y / (scale * zoom) - y / scale;\n\n    ctx.current.scale(zoom, zoom);\n    ctx.current.translate(-orgnx, -orgny);\n\n    // Updating scale and visisble width and height\n    scale *= zoom;\n    visibleWidth = width / scale;\n    visibleHeight = height / scale;\n  }\n\n  const handlecolor = (e) => {\n        if(e.target.value === \"pain\"){\n            setSelectedVal(\"pain\");\n            setSelectedColor(\"red\");\n        }\n        if(e.target.value === \"itching\"){\n            setSelectedVal(\"itching\");\n            setSelectedColor(\"green\");\n        }\n        if(e.target.value === \"rash\"){\n            setSelectedVal(\"rash\");\n            setSelectedColor(\"yellow\");\n        }\n        if(e.target.value === \"burning sensation\"){\n            setSelectedVal(\"burning sensation\");\n            setSelectedColor(\"orange\");\n        }\n        \n  }\n\n  return (\n    <div className=\"maincanvas\">\n        <div><canvas\n          style={{\n            border: \"1px solid #000\",\n            marginLeft : \"30%\",\n            marginRight : \"30%\"\n            // background : `url(${body})`,\n            // backgroundSize : '100% 100%',\n          }}\n          width={550}\n          height={800}\n          ref={canvasRef}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseLeave={onMouseUp}\n          onMouseMove={onMouseMove}\n        //   onWheel = {(e) => zoom(e)}\n        />\n        </div>\n        <div style = {{\n            \"display\" : \"flex\",\n            \"marginLeft\": \"30%\",\n            \"height\" : \"40px\",\n            \n            // \"marginRight\": \"30%\",\n        }}>\n        <select\n          value={selectedVal}\n          style={{\n            \"fontSize\" : \"1.2em\"\n        }}\n          onChange={(e) => handlecolor(e)}\n        >\n          {\n            values.map(\n              color => <option key={color} value={color}>{color}</option>\n            )\n          }\n        </select>\n        {/* <img src = {body} alt = \"nope\"/> */}\n        \n        <button onClick={clear} style={{\n            \"fontSize\" : \"1.2em\"\n        }}>Clear</button>\n        <button style={{\n            \"fontSize\" : \"1.2em\"\n        }} onClick={download}>Download</button>\n        <div style = {{\n            \"paddingLeft\" : \"100px\",\n            \"fontSize\" : \"1.2em\",\n            \"marginRight\" :  \"0%\"\n        }}><label><input type = \"checkbox\"/> Is internal </label></div>\n        </div>\n        {/* <button onClick={nzoom}>zoom</button> */}\n    </div>\n  )\n}\n\nexport default Canvas;","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\chat.js",["187"],[],"import React , {useState, useEffect} from 'react';\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport './chat.css'\n\nconst Chat = () => {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([{\n        author : \"you\",\n        message : \"Type '/start' to start the conversation\",\n    }]);\n\n    const sendMessage = async () => {\n        let s = currentMessage;\n        const mobj = {\n          author : \"other\",\n          message : s\n        }\n        setMessageList((list) => [...list, mobj]);\n        // s.replace(/ /g, '%20');\n        let url = `http://localhost:5001/api`;\n        console.log(url);\n        const response = await fetch(url, {\n          method:'POST',\n          headers : {\n            'Accept' :'application/json',\n            'Content-Type' : 'application/json'\n          },\n          body : JSON.stringify({\n            \"input\": s\n          })\n        });\n        const data = await response.text();\n        console.log(data);\n        const val = JSON.parse(data).output;\n        console.log(val);\n        const mobj2 = {\n          author : \"you\",\n          message : val\n        }\n        setMessageList((list) => [...list, mobj2]);\n\n        setCurrentMessage(\"\");\n    }\n\n    return (\n      <div className='main'>\n        <div className=\"chat-window\">\n          <div className=\"chat-header\">\n            <p>Chat window</p>\n          </div>\n          <div className=\"chat-body\">\n            <ScrollToBottom className=\"message-container\">\n              {messageList.map((messageContent) => {\n                return (\n                  <div\n                    className=\"message\"\n                    id={messageContent.author}\n                  >\n                    <div>\n                      <div className=\"message-content\">\n                        <p>{messageContent.message}</p>\n                      </div>\n                      {/* <div className=\"message-meta\">\n                        <p id=\"time\">{messageContent.time}</p>\n                        <p id=\"author\">{messageContent.author}</p>\n                      </div> */}\n                    </div>\n                  </div>\n                );\n              })}\n            </ScrollToBottom>\n          </div>\n          <div className=\"chat-footer\">\n            <input\n              type=\"text\"\n              value={currentMessage}\n              placeholder=\"Hey...\"\n              onChange={(event) => {\n                setCurrentMessage(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                event.key === \"Enter\" && sendMessage();\n              }}\n            />\n            <button onClick={sendMessage}>&#9658;</button>\n          </div>\n        </div>\n        </div>\n      );\n\n}\n\n\nexport default Chat;","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\test.js",["188","189","190","191"],[],"import React , {useState, useEffect} from 'react';\n\nconst Tes = () => {\n    const [data, setdata] = useState({\n        name: \"\",\n        age: 0,\n        date: \"\",\n        programming: \"\",\n    });\n  \n    // Using useEffect for single rendering\n    // useEffect(() => {\n    //     // Using fetch to fetch the api from \n    //     // flask server it will be redirected to proxy\n    //     fetch(\"/data\").then((res) =>\n    //         res.json().then((data) => {\n    //             console.log(data);\n    //             // Setting a data from api\n    //             setdata({\n    //                 name: data.Name,\n    //                 age: data.Age,\n    //                 date: data.Date,\n    //                 programming: data.programming,\n    //             });\n    //         })\n    //     );\n    // }, []);\n\n    const check = async () => {\n        // let s = currentMessage;\n        // s.replace(/ /g, '%20');\n        const s = \"fever\";\n        let url = `http://localhost:5002/api/${s}`;\n        console.log(url);\n        const response = await fetch(url);\n        const data = await response.text();\n        console.log(data);\n\n        \n    }\n\n    const check1 = async () => {\n        // let s = currentMessage;\n        // s.replace(/ /g, '%20');\n        const s = \"fever\";\n        let url = `http://localhost:5002/data`;\n        console.log(url);\n        const response = await fetch(url);\n        const data = await response.text();\n        console.log(data);\n\n        \n    }\n\n    const check2 = async () => {\n        // let s = currentMessage;\n        // s.replace(/ /g, '%20');\n        let s = \"i have cough\";\n        // s.replace(/ /g, '%20');\n        let url = `http://localhost:5002/api2`;\n        console.log(url);\n        fetch(url, {\n            method :'post',\n            headers : {\n                'Accept' :'application/json',\n                'Content-Type' : 'application/json'\n              },\n            body: JSON.stringify({\n                \"input\" : s\n            })\n        }).then((res) => res.json())\n        .then((data) => console.log(data))\n        .catch((err) => console.log(err));\n        \n        // console.log(data);\n\n        \n    }\n\n    const sendMessage = async () => {\n        let s = \"quit\";\n        // s.replace(/ /g, '%20');\n        let url = `http://localhost:5001/api`;\n        console.log(url);\n        const response = await fetch(url, {\n          method:'POST',\n          headers : {\n            'Accept' :'application/json',\n            'Content-Type' : 'application/json'\n          },\n          body : JSON.stringify({\n            \"input\": s\n          })\n        });\n        const data = await response.text();\n        console.log(data);\n        const val = JSON.parse(data).output;\n        console.log(val);\n        // setMessageList((list) => [...list, currentMessage]);\n        // setCurrentMessage(\"\");\n    }\n  \n    return (\n        // <div className=\"App\">\n        //     <header className=\"App-header\">\n        //         <h1>React and flask</h1>\n        //         {/* Calling a data from setdata for showing */}\n        //         <p>{data.name}</p>\n        //         <p>{data.age}</p>\n        //         <p>{data.date}</p>\n        //         <p>{data.programming}</p>\n  \n        //     </header>\n        // </div>\n        <div>\n            <button onClick={check}>check</button>\n            <button onClick={check1}>check1</button>\n            <button onClick={check2}>check2</button>\n            <button onClick={sendMessage}>sendMessage</button>\n        </div>\n    );\n}\n\nexport default Tes","C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\addflow.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\header.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\flowtree.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graph.js",["192","193","194"],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fever.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fever_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\ReactFlowRenderer.js",[],[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\cough_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\headache_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\vomiting_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\general_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\stomachache_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\sorethroat_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\rashes_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\chestpain_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\fatigue_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\weightgain_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\weightloss_elements.js",[],[],"C:\\Users\\barun\\OneDrive\\Documents\\btp\\chatbot\\client\\src\\graphs\\memoryloss_elements.js",[],[],{"ruleId":"195","severity":1,"message":"196","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"199","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":22},{"ruleId":"195","severity":1,"message":"200","line":17,"column":8,"nodeType":"197","messageId":"198","endLine":17,"endColumn":17},{"ruleId":"195","severity":1,"message":"201","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":14},{"ruleId":"195","severity":1,"message":"202","line":39,"column":7,"nodeType":"197","messageId":"198","endLine":39,"endColumn":11},{"ruleId":"195","severity":1,"message":"203","line":52,"column":7,"nodeType":"197","messageId":"198","endLine":52,"endColumn":19},{"ruleId":"195","severity":1,"message":"204","line":53,"column":7,"nodeType":"197","messageId":"198","endLine":53,"endColumn":19},{"ruleId":"195","severity":1,"message":"205","line":63,"column":7,"nodeType":"197","messageId":"198","endLine":63,"endColumn":12},{"ruleId":"195","severity":1,"message":"206","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":12},{"ruleId":"195","severity":1,"message":"207","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":25},{"ruleId":"195","severity":1,"message":"208","line":2,"column":27,"nodeType":"197","messageId":"198","endLine":2,"endColumn":36},{"ruleId":"195","severity":1,"message":"209","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":22},{"ruleId":"195","severity":1,"message":"210","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":13},{"ruleId":"195","severity":1,"message":"211","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":11},{"ruleId":"195","severity":1,"message":"196","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":16},{"ruleId":"195","severity":1,"message":"212","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":28},{"ruleId":"195","severity":1,"message":"208","line":1,"column":30,"nodeType":"197","messageId":"198","endLine":1,"endColumn":39},{"ruleId":"195","severity":1,"message":"213","line":1,"column":41,"nodeType":"197","messageId":"198","endLine":1,"endColumn":47},{"ruleId":"195","severity":1,"message":"214","line":10,"column":11,"nodeType":"197","messageId":"198","endLine":10,"endColumn":21},{"ruleId":"195","severity":1,"message":"215","line":11,"column":11,"nodeType":"197","messageId":"198","endLine":11,"endColumn":20},{"ruleId":"195","severity":1,"message":"216","line":48,"column":11,"nodeType":"197","messageId":"198","endLine":48,"endColumn":27},{"ruleId":"195","severity":1,"message":"217","line":52,"column":11,"nodeType":"197","messageId":"198","endLine":52,"endColumn":26},{"ruleId":"195","severity":1,"message":"207","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"208","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"218","line":3,"column":9,"nodeType":"197","messageId":"198","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"219","line":32,"column":11,"nodeType":"197","messageId":"198","endLine":32,"endColumn":16},{"ruleId":"195","severity":1,"message":"220","line":4,"column":7,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"195","severity":1,"message":"221","line":28,"column":5,"nodeType":"197","messageId":"198","endLine":28,"endColumn":17},{"ruleId":"195","severity":1,"message":"222","line":29,"column":13,"nodeType":"197","messageId":"198","endLine":29,"endColumn":26},{"ruleId":"195","severity":1,"message":"223","line":30,"column":7,"nodeType":"197","messageId":"198","endLine":30,"endColumn":19},{"ruleId":"195","severity":1,"message":"224","line":137,"column":9,"nodeType":"197","messageId":"198","endLine":137,"endColumn":13},{"ruleId":"195","severity":1,"message":"208","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"208","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"202","line":4,"column":12,"nodeType":"197","messageId":"198","endLine":4,"endColumn":16},{"ruleId":"195","severity":1,"message":"225","line":4,"column":18,"nodeType":"197","messageId":"198","endLine":4,"endColumn":25},{"ruleId":"195","severity":1,"message":"226","line":45,"column":15,"nodeType":"197","messageId":"198","endLine":45,"endColumn":16},{"ruleId":"195","severity":1,"message":"227","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":25},{"ruleId":"195","severity":1,"message":"228","line":3,"column":18,"nodeType":"197","messageId":"198","endLine":3,"endColumn":30},{"ruleId":"195","severity":1,"message":"229","line":3,"column":41,"nodeType":"197","messageId":"198","endLine":3,"endColumn":53},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Flowchart' is defined but never used.","'Header' is defined but never used.","'data' is assigned a value but never used.","'myDataString' is assigned a value but never used.","'myDataObject' is assigned a value but never used.","'jsond' is assigned a value but never used.","'logo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Listofpatients' is defined but never used.","'Axios' is defined but never used.","'Tes' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'right_view' is assigned a value but never used.","'left_view' is assigned a value but never used.","'backrighthandler' is assigned a value but never used.","'backlefthandler' is assigned a value but never used.","'redirect' is defined but never used.","'redir' is assigned a value but never used.","'colors' is assigned a value but never used.","'visibleWidth' is assigned a value but never used.","'visibleHeight' is assigned a value but never used.","'cameraOffset' is assigned a value but never used.","'zoom' is assigned a value but never used.","'setdata' is assigned a value but never used.","'s' is assigned a value but never used.","'ReactFlowRenderer' is defined but never used.","'generalnodes' is defined but never used.","'generaledges' is defined but never used."]